diff --git a/api/poetry.lock b/api/poetry.lock
index e774a10..3ffcacd 100644
--- a/api/poetry.lock
+++ b/api/poetry.lock
@@ -671,6 +671,69 @@ colorama = {version = "*", markers = "sys_platform == \"win32\""}
 [package.extras]
 development = ["black", "flake8", "mypy", "pytest", "types-colorama"]
 
+[[package]]
+name = "contourpy"
+version = "1.2.0"
+description = "Python library for calculating contours of 2D quadrilateral grids"
+optional = false
+python-versions = ">=3.9"
+files = [
+    {file = "contourpy-1.2.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:0274c1cb63625972c0c007ab14dd9ba9e199c36ae1a231ce45d725cbcbfd10a8"},
+    {file = "contourpy-1.2.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:ab459a1cbbf18e8698399c595a01f6dcc5c138220ca3ea9e7e6126232d102bb4"},
+    {file = "contourpy-1.2.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:6fdd887f17c2f4572ce548461e4f96396681212d858cae7bd52ba3310bc6f00f"},
+    {file = "contourpy-1.2.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:5d16edfc3fc09968e09ddffada434b3bf989bf4911535e04eada58469873e28e"},
+    {file = "contourpy-1.2.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:1c203f617abc0dde5792beb586f827021069fb6d403d7f4d5c2b543d87edceb9"},
+    {file = "contourpy-1.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b69303ceb2e4d4f146bf82fda78891ef7bcd80c41bf16bfca3d0d7eb545448aa"},
+    {file = "contourpy-1.2.0-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:884c3f9d42d7218304bc74a8a7693d172685c84bd7ab2bab1ee567b769696df9"},
+    {file = "contourpy-1.2.0-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:4a1b1208102be6e851f20066bf0e7a96b7d48a07c9b0cfe6d0d4545c2f6cadab"},
+    {file = "contourpy-1.2.0-cp310-cp310-win32.whl", hash = "sha256:34b9071c040d6fe45d9826cbbe3727d20d83f1b6110d219b83eb0e2a01d79488"},
+    {file = "contourpy-1.2.0-cp310-cp310-win_amd64.whl", hash = "sha256:bd2f1ae63998da104f16a8b788f685e55d65760cd1929518fd94cd682bf03e41"},
+    {file = "contourpy-1.2.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:dd10c26b4eadae44783c45ad6655220426f971c61d9b239e6f7b16d5cdaaa727"},
+    {file = "contourpy-1.2.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:5c6b28956b7b232ae801406e529ad7b350d3f09a4fde958dfdf3c0520cdde0dd"},
+    {file = "contourpy-1.2.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:ebeac59e9e1eb4b84940d076d9f9a6cec0064e241818bcb6e32124cc5c3e377a"},
+    {file = "contourpy-1.2.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:139d8d2e1c1dd52d78682f505e980f592ba53c9f73bd6be102233e358b401063"},
+    {file = "contourpy-1.2.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:1e9dc350fb4c58adc64df3e0703ab076f60aac06e67d48b3848c23647ae4310e"},
+    {file = "contourpy-1.2.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:18fc2b4ed8e4a8fe849d18dce4bd3c7ea637758c6343a1f2bae1e9bd4c9f4686"},
+    {file = "contourpy-1.2.0-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:16a7380e943a6d52472096cb7ad5264ecee36ed60888e2a3d3814991a0107286"},
+    {file = "contourpy-1.2.0-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:8d8faf05be5ec8e02a4d86f616fc2a0322ff4a4ce26c0f09d9f7fb5330a35c95"},
+    {file = "contourpy-1.2.0-cp311-cp311-win32.whl", hash = "sha256:67b7f17679fa62ec82b7e3e611c43a016b887bd64fb933b3ae8638583006c6d6"},
+    {file = "contourpy-1.2.0-cp311-cp311-win_amd64.whl", hash = "sha256:99ad97258985328b4f207a5e777c1b44a83bfe7cf1f87b99f9c11d4ee477c4de"},
+    {file = "contourpy-1.2.0-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:575bcaf957a25d1194903a10bc9f316c136c19f24e0985a2b9b5608bdf5dbfe0"},
+    {file = "contourpy-1.2.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:9e6c93b5b2dbcedad20a2f18ec22cae47da0d705d454308063421a3b290d9ea4"},
+    {file = "contourpy-1.2.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:464b423bc2a009088f19bdf1f232299e8b6917963e2b7e1d277da5041f33a779"},
+    {file = "contourpy-1.2.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:68ce4788b7d93e47f84edd3f1f95acdcd142ae60bc0e5493bfd120683d2d4316"},
+    {file = "contourpy-1.2.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3d7d1f8871998cdff5d2ff6a087e5e1780139abe2838e85b0b46b7ae6cc25399"},
+    {file = "contourpy-1.2.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6e739530c662a8d6d42c37c2ed52a6f0932c2d4a3e8c1f90692ad0ce1274abe0"},
+    {file = "contourpy-1.2.0-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:247b9d16535acaa766d03037d8e8fb20866d054d3c7fbf6fd1f993f11fc60ca0"},
+    {file = "contourpy-1.2.0-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:461e3ae84cd90b30f8d533f07d87c00379644205b1d33a5ea03381edc4b69431"},
+    {file = "contourpy-1.2.0-cp312-cp312-win32.whl", hash = "sha256:1c2559d6cffc94890b0529ea7eeecc20d6fadc1539273aa27faf503eb4656d8f"},
+    {file = "contourpy-1.2.0-cp312-cp312-win_amd64.whl", hash = "sha256:491b1917afdd8638a05b611a56d46587d5a632cabead889a5440f7c638bc6ed9"},
+    {file = "contourpy-1.2.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:5fd1810973a375ca0e097dee059c407913ba35723b111df75671a1976efa04bc"},
+    {file = "contourpy-1.2.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:999c71939aad2780f003979b25ac5b8f2df651dac7b38fb8ce6c46ba5abe6ae9"},
+    {file = "contourpy-1.2.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b7caf9b241464c404613512d5594a6e2ff0cc9cb5615c9475cc1d9b514218ae8"},
+    {file = "contourpy-1.2.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:266270c6f6608340f6c9836a0fb9b367be61dde0c9a9a18d5ece97774105ff3e"},
+    {file = "contourpy-1.2.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:dbd50d0a0539ae2e96e537553aff6d02c10ed165ef40c65b0e27e744a0f10af8"},
+    {file = "contourpy-1.2.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:11f8d2554e52f459918f7b8e6aa20ec2a3bce35ce95c1f0ef4ba36fbda306df5"},
+    {file = "contourpy-1.2.0-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:ce96dd400486e80ac7d195b2d800b03e3e6a787e2a522bfb83755938465a819e"},
+    {file = "contourpy-1.2.0-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:6d3364b999c62f539cd403f8123ae426da946e142312a514162adb2addd8d808"},
+    {file = "contourpy-1.2.0-cp39-cp39-win32.whl", hash = "sha256:1c88dfb9e0c77612febebb6ac69d44a8d81e3dc60f993215425b62c1161353f4"},
+    {file = "contourpy-1.2.0-cp39-cp39-win_amd64.whl", hash = "sha256:78e6ad33cf2e2e80c5dfaaa0beec3d61face0fb650557100ee36db808bfa6843"},
+    {file = "contourpy-1.2.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl", hash = "sha256:be16975d94c320432657ad2402f6760990cb640c161ae6da1363051805fa8108"},
+    {file = "contourpy-1.2.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b95a225d4948b26a28c08307a60ac00fb8671b14f2047fc5476613252a129776"},
+    {file = "contourpy-1.2.0-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:0d7e03c0f9a4f90dc18d4e77e9ef4ec7b7bbb437f7f675be8e530d65ae6ef956"},
+    {file = "contourpy-1.2.0.tar.gz", hash = "sha256:171f311cb758de7da13fc53af221ae47a5877be5a0843a9fe150818c51ed276a"},
+]
+
+[package.dependencies]
+numpy = ">=1.20,<2.0"
+
+[package.extras]
+bokeh = ["bokeh", "selenium"]
+docs = ["furo", "sphinx (>=7.2)", "sphinx-copybutton"]
+mypy = ["contourpy[bokeh,docs]", "docutils-stubs", "mypy (==1.6.1)", "types-Pillow"]
+test = ["Pillow", "contourpy[test-no-images]", "matplotlib"]
+test-no-images = ["pytest", "pytest-cov", "pytest-xdist", "wurlitzer"]
+
 [[package]]
 name = "cryptography"
 version = "42.0.5"
@@ -725,6 +788,21 @@ ssh = ["bcrypt (>=3.1.5)"]
 test = ["certifi", "pretend", "pytest (>=6.2.0)", "pytest-benchmark", "pytest-cov", "pytest-xdist"]
 test-randomorder = ["pytest-randomly"]
 
+[[package]]
+name = "cycler"
+version = "0.12.1"
+description = "Composable style cycles"
+optional = false
+python-versions = ">=3.8"
+files = [
+    {file = "cycler-0.12.1-py3-none-any.whl", hash = "sha256:85cef7cff222d8644161529808465972e51340599459b8ac3ccbac5a854e0d30"},
+    {file = "cycler-0.12.1.tar.gz", hash = "sha256:88bb128f02ba341da8ef447245a9e138fae777f6a23943da4540077d3601eb1c"},
+]
+
+[package.extras]
+docs = ["ipython", "matplotlib", "numpydoc", "sphinx"]
+tests = ["pytest", "pytest-cov", "pytest-xdist"]
+
 [[package]]
 name = "dataclasses-json"
 version = "0.6.4"
@@ -987,6 +1065,20 @@ files = [
 fastapi = ">=0.56.0"
 starlette = "*"
 
+[[package]]
+name = "fastjsonschema"
+version = "2.19.1"
+description = "Fastest Python implementation of JSON schema"
+optional = false
+python-versions = "*"
+files = [
+    {file = "fastjsonschema-2.19.1-py3-none-any.whl", hash = "sha256:3672b47bc94178c9f23dbb654bf47440155d4db9df5f7bc47643315f9c405cd0"},
+    {file = "fastjsonschema-2.19.1.tar.gz", hash = "sha256:e3126a94bdc4623d3de4485f8d468a12f02a67921315ddc87836d6e456dc789d"},
+]
+
+[package.extras]
+devel = ["colorama", "json-spec", "jsonschema", "pylint", "pytest", "pytest-benchmark", "pytest-cache", "validictory"]
+
 [[package]]
 name = "filelock"
 version = "3.13.1"
@@ -1014,6 +1106,71 @@ files = [
     {file = "flatbuffers-24.3.7.tar.gz", hash = "sha256:0895c22b9a6019ff2f4de2e5e2f7cd15914043e6e7033a94c0c6369422690f22"},
 ]
 
+[[package]]
+name = "fonttools"
+version = "4.49.0"
+description = "Tools to manipulate font files"
+optional = false
+python-versions = ">=3.8"
+files = [
+    {file = "fonttools-4.49.0-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:d970ecca0aac90d399e458f0b7a8a597e08f95de021f17785fb68e2dc0b99717"},
+    {file = "fonttools-4.49.0-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:ac9a745b7609f489faa65e1dc842168c18530874a5f5b742ac3dd79e26bca8bc"},
+    {file = "fonttools-4.49.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0ba0e00620ca28d4ca11fc700806fd69144b463aa3275e1b36e56c7c09915559"},
+    {file = "fonttools-4.49.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:cdee3ab220283057e7840d5fb768ad4c2ebe65bdba6f75d5d7bf47f4e0ed7d29"},
+    {file = "fonttools-4.49.0-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:ce7033cb61f2bb65d8849658d3786188afd80f53dad8366a7232654804529532"},
+    {file = "fonttools-4.49.0-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:07bc5ea02bb7bc3aa40a1eb0481ce20e8d9b9642a9536cde0218290dd6085828"},
+    {file = "fonttools-4.49.0-cp310-cp310-win32.whl", hash = "sha256:86eef6aab7fd7c6c8545f3ebd00fd1d6729ca1f63b0cb4d621bccb7d1d1c852b"},
+    {file = "fonttools-4.49.0-cp310-cp310-win_amd64.whl", hash = "sha256:1fac1b7eebfce75ea663e860e7c5b4a8831b858c17acd68263bc156125201abf"},
+    {file = "fonttools-4.49.0-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:edc0cce355984bb3c1d1e89d6a661934d39586bb32191ebff98c600f8957c63e"},
+    {file = "fonttools-4.49.0-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:83a0d9336de2cba86d886507dd6e0153df333ac787377325a39a2797ec529814"},
+    {file = "fonttools-4.49.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:36c8865bdb5cfeec88f5028e7e592370a0657b676c6f1d84a2108e0564f90e22"},
+    {file = "fonttools-4.49.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:33037d9e56e2562c710c8954d0f20d25b8386b397250d65581e544edc9d6b942"},
+    {file = "fonttools-4.49.0-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:8fb022d799b96df3eaa27263e9eea306bd3d437cc9aa981820850281a02b6c9a"},
+    {file = "fonttools-4.49.0-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:33c584c0ef7dc54f5dd4f84082eabd8d09d1871a3d8ca2986b0c0c98165f8e86"},
+    {file = "fonttools-4.49.0-cp311-cp311-win32.whl", hash = "sha256:cbe61b158deb09cffdd8540dc4a948d6e8f4d5b4f3bf5cd7db09bd6a61fee64e"},
+    {file = "fonttools-4.49.0-cp311-cp311-win_amd64.whl", hash = "sha256:fc11e5114f3f978d0cea7e9853627935b30d451742eeb4239a81a677bdee6bf6"},
+    {file = "fonttools-4.49.0-cp312-cp312-macosx_10_9_universal2.whl", hash = "sha256:d647a0e697e5daa98c87993726da8281c7233d9d4ffe410812a4896c7c57c075"},
+    {file = "fonttools-4.49.0-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:f3bbe672df03563d1f3a691ae531f2e31f84061724c319652039e5a70927167e"},
+    {file = "fonttools-4.49.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:bebd91041dda0d511b0d303180ed36e31f4f54b106b1259b69fade68413aa7ff"},
+    {file = "fonttools-4.49.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:4145f91531fd43c50f9eb893faa08399816bb0b13c425667c48475c9f3a2b9b5"},
+    {file = "fonttools-4.49.0-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:ea329dafb9670ffbdf4dbc3b0e5c264104abcd8441d56de77f06967f032943cb"},
+    {file = "fonttools-4.49.0-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:c076a9e548521ecc13d944b1d261ff3d7825048c338722a4bd126d22316087b7"},
+    {file = "fonttools-4.49.0-cp312-cp312-win32.whl", hash = "sha256:b607ea1e96768d13be26d2b400d10d3ebd1456343eb5eaddd2f47d1c4bd00880"},
+    {file = "fonttools-4.49.0-cp312-cp312-win_amd64.whl", hash = "sha256:a974c49a981e187381b9cc2c07c6b902d0079b88ff01aed34695ec5360767034"},
+    {file = "fonttools-4.49.0-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:b85ec0bdd7bdaa5c1946398cbb541e90a6dfc51df76dfa88e0aaa41b335940cb"},
+    {file = "fonttools-4.49.0-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:af20acbe198a8a790618ee42db192eb128afcdcc4e96d99993aca0b60d1faeb4"},
+    {file = "fonttools-4.49.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:4d418b1fee41a1d14931f7ab4b92dc0bc323b490e41d7a333eec82c9f1780c75"},
+    {file = "fonttools-4.49.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b44a52b8e6244b6548851b03b2b377a9702b88ddc21dcaf56a15a0393d425cb9"},
+    {file = "fonttools-4.49.0-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:7c7125068e04a70739dad11857a4d47626f2b0bd54de39e8622e89701836eabd"},
+    {file = "fonttools-4.49.0-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:29e89d0e1a7f18bc30f197cfadcbef5a13d99806447c7e245f5667579a808036"},
+    {file = "fonttools-4.49.0-cp38-cp38-win32.whl", hash = "sha256:9d95fa0d22bf4f12d2fb7b07a46070cdfc19ef5a7b1c98bc172bfab5bf0d6844"},
+    {file = "fonttools-4.49.0-cp38-cp38-win_amd64.whl", hash = "sha256:768947008b4dc552d02772e5ebd49e71430a466e2373008ce905f953afea755a"},
+    {file = "fonttools-4.49.0-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:08877e355d3dde1c11973bb58d4acad1981e6d1140711230a4bfb40b2b937ccc"},
+    {file = "fonttools-4.49.0-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:fdb54b076f25d6b0f0298dc706acee5052de20c83530fa165b60d1f2e9cbe3cb"},
+    {file = "fonttools-4.49.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:0af65c720520710cc01c293f9c70bd69684365c6015cc3671db2b7d807fe51f2"},
+    {file = "fonttools-4.49.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:1f255ce8ed7556658f6d23f6afd22a6d9bbc3edb9b96c96682124dc487e1bf42"},
+    {file = "fonttools-4.49.0-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:d00af0884c0e65f60dfaf9340e26658836b935052fdd0439952ae42e44fdd2be"},
+    {file = "fonttools-4.49.0-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:263832fae27481d48dfafcc43174644b6706639661e242902ceb30553557e16c"},
+    {file = "fonttools-4.49.0-cp39-cp39-win32.whl", hash = "sha256:0404faea044577a01bb82d47a8fa4bc7a54067fa7e324785dd65d200d6dd1133"},
+    {file = "fonttools-4.49.0-cp39-cp39-win_amd64.whl", hash = "sha256:b050d362df50fc6e38ae3954d8c29bf2da52be384649ee8245fdb5186b620836"},
+    {file = "fonttools-4.49.0-py3-none-any.whl", hash = "sha256:af281525e5dd7fa0b39fb1667b8d5ca0e2a9079967e14c4bfe90fd1cd13e0f18"},
+    {file = "fonttools-4.49.0.tar.gz", hash = "sha256:ebf46e7f01b7af7861310417d7c49591a85d99146fc23a5ba82fdb28af156321"},
+]
+
+[package.extras]
+all = ["brotli (>=1.0.1)", "brotlicffi (>=0.8.0)", "fs (>=2.2.0,<3)", "lxml (>=4.0)", "lz4 (>=1.7.4.2)", "matplotlib", "munkres", "pycairo", "scipy", "skia-pathops (>=0.5.0)", "sympy", "uharfbuzz (>=0.23.0)", "unicodedata2 (>=15.1.0)", "xattr", "zopfli (>=0.1.4)"]
+graphite = ["lz4 (>=1.7.4.2)"]
+interpolatable = ["munkres", "pycairo", "scipy"]
+lxml = ["lxml (>=4.0)"]
+pathops = ["skia-pathops (>=0.5.0)"]
+plot = ["matplotlib"]
+repacker = ["uharfbuzz (>=0.23.0)"]
+symfont = ["sympy"]
+type1 = ["xattr"]
+ufo = ["fs (>=2.2.0,<3)"]
+unicode = ["unicodedata2 (>=15.1.0)"]
+woff = ["brotli (>=1.0.1)", "brotlicffi (>=0.8.0)", "zopfli (>=0.1.4)"]
+
 [[package]]
 name = "frozenlist"
 version = "1.4.1"
@@ -1651,6 +1808,174 @@ files = [
 docs = ["furo", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "sphinx"]
 testing = ["ecdsa", "feedparser", "gmpy2", "numpy", "pandas", "pymongo", "pytest (>=3.5,!=3.7.3)", "pytest-checkdocs (>=1.2.3)", "pytest-cov", "pytest-enabler (>=1.0.1)", "pytest-ruff", "scikit-learn", "simplejson", "sqlalchemy", "ujson"]
 
+[[package]]
+name = "jsonschema"
+version = "4.21.1"
+description = "An implementation of JSON Schema validation for Python"
+optional = false
+python-versions = ">=3.8"
+files = [
+    {file = "jsonschema-4.21.1-py3-none-any.whl", hash = "sha256:7996507afae316306f9e2290407761157c6f78002dcf7419acb99822143d1c6f"},
+    {file = "jsonschema-4.21.1.tar.gz", hash = "sha256:85727c00279f5fa6bedbe6238d2aa6403bedd8b4864ab11207d07df3cc1b2ee5"},
+]
+
+[package.dependencies]
+attrs = ">=22.2.0"
+jsonschema-specifications = ">=2023.03.6"
+referencing = ">=0.28.4"
+rpds-py = ">=0.7.1"
+
+[package.extras]
+format = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]
+format-nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=1.11)"]
+
+[[package]]
+name = "jsonschema-specifications"
+version = "2023.12.1"
+description = "The JSON Schema meta-schemas and vocabularies, exposed as a Registry"
+optional = false
+python-versions = ">=3.8"
+files = [
+    {file = "jsonschema_specifications-2023.12.1-py3-none-any.whl", hash = "sha256:87e4fdf3a94858b8a2ba2778d9ba57d8a9cafca7c7489c46ba0d30a8bc6a9c3c"},
+    {file = "jsonschema_specifications-2023.12.1.tar.gz", hash = "sha256:48a76787b3e70f5ed53f1160d2b81f586e4ca6d1548c5de7085d1682674764cc"},
+]
+
+[package.dependencies]
+referencing = ">=0.31.0"
+
+[[package]]
+name = "jupyter-core"
+version = "5.7.2"
+description = "Jupyter core package. A base package on which Jupyter projects rely."
+optional = false
+python-versions = ">=3.8"
+files = [
+    {file = "jupyter_core-5.7.2-py3-none-any.whl", hash = "sha256:4f7315d2f6b4bcf2e3e7cb6e46772eba760ae459cd1f59d29eb57b0a01bd7409"},
+    {file = "jupyter_core-5.7.2.tar.gz", hash = "sha256:aa5f8d32bbf6b431ac830496da7392035d6f61b4f54872f15c4bd2a9c3f536d9"},
+]
+
+[package.dependencies]
+platformdirs = ">=2.5"
+pywin32 = {version = ">=300", markers = "sys_platform == \"win32\" and platform_python_implementation != \"PyPy\""}
+traitlets = ">=5.3"
+
+[package.extras]
+docs = ["myst-parser", "pydata-sphinx-theme", "sphinx-autodoc-typehints", "sphinxcontrib-github-alt", "sphinxcontrib-spelling", "traitlets"]
+test = ["ipykernel", "pre-commit", "pytest (<8)", "pytest-cov", "pytest-timeout"]
+
+[[package]]
+name = "kiwisolver"
+version = "1.4.5"
+description = "A fast implementation of the Cassowary constraint solver"
+optional = false
+python-versions = ">=3.7"
+files = [
+    {file = "kiwisolver-1.4.5-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:05703cf211d585109fcd72207a31bb170a0f22144d68298dc5e61b3c946518af"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:146d14bebb7f1dc4d5fbf74f8a6cb15ac42baadee8912eb84ac0b3b2a3dc6ac3"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:6ef7afcd2d281494c0a9101d5c571970708ad911d028137cd558f02b851c08b4"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:9eaa8b117dc8337728e834b9c6e2611f10c79e38f65157c4c38e9400286f5cb1"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:ec20916e7b4cbfb1f12380e46486ec4bcbaa91a9c448b97023fde0d5bbf9e4ff"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:39b42c68602539407884cf70d6a480a469b93b81b7701378ba5e2328660c847a"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:aa12042de0171fad672b6c59df69106d20d5596e4f87b5e8f76df757a7c399aa"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:2a40773c71d7ccdd3798f6489aaac9eee213d566850a9533f8d26332d626b82c"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:19df6e621f6d8b4b9c4d45f40a66839294ff2bb235e64d2178f7522d9170ac5b"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:83d78376d0d4fd884e2c114d0621624b73d2aba4e2788182d286309ebdeed770"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-musllinux_1_1_ppc64le.whl", hash = "sha256:e391b1f0a8a5a10ab3b9bb6afcfd74f2175f24f8975fb87ecae700d1503cdee0"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-musllinux_1_1_s390x.whl", hash = "sha256:852542f9481f4a62dbb5dd99e8ab7aedfeb8fb6342349a181d4036877410f525"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:59edc41b24031bc25108e210c0def6f6c2191210492a972d585a06ff246bb79b"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-win32.whl", hash = "sha256:a6aa6315319a052b4ee378aa171959c898a6183f15c1e541821c5c59beaa0238"},
+    {file = "kiwisolver-1.4.5-cp310-cp310-win_amd64.whl", hash = "sha256:d0ef46024e6a3d79c01ff13801cb19d0cad7fd859b15037aec74315540acc276"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:11863aa14a51fd6ec28688d76f1735f8f69ab1fabf388851a595d0721af042f5"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:8ab3919a9997ab7ef2fbbed0cc99bb28d3c13e6d4b1ad36e97e482558a91be90"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:fcc700eadbbccbf6bc1bcb9dbe0786b4b1cb91ca0dcda336eef5c2beed37b797"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:dfdd7c0b105af050eb3d64997809dc21da247cf44e63dc73ff0fd20b96be55a9"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:76c6a5964640638cdeaa0c359382e5703e9293030fe730018ca06bc2010c4437"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:bbea0db94288e29afcc4c28afbf3a7ccaf2d7e027489c449cf7e8f83c6346eb9"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:ceec1a6bc6cab1d6ff5d06592a91a692f90ec7505d6463a88a52cc0eb58545da"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:040c1aebeda72197ef477a906782b5ab0d387642e93bda547336b8957c61022e"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:f91de7223d4c7b793867797bacd1ee53bfe7359bd70d27b7b58a04efbb9436c8"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:faae4860798c31530dd184046a900e652c95513796ef51a12bc086710c2eec4d"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-musllinux_1_1_ppc64le.whl", hash = "sha256:b0157420efcb803e71d1b28e2c287518b8808b7cf1ab8af36718fd0a2c453eb0"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-musllinux_1_1_s390x.whl", hash = "sha256:06f54715b7737c2fecdbf140d1afb11a33d59508a47bf11bb38ecf21dc9ab79f"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:fdb7adb641a0d13bdcd4ef48e062363d8a9ad4a182ac7647ec88f695e719ae9f"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-win32.whl", hash = "sha256:bb86433b1cfe686da83ce32a9d3a8dd308e85c76b60896d58f082136f10bffac"},
+    {file = "kiwisolver-1.4.5-cp311-cp311-win_amd64.whl", hash = "sha256:6c08e1312a9cf1074d17b17728d3dfce2a5125b2d791527f33ffbe805200a355"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-macosx_10_9_universal2.whl", hash = "sha256:32d5cf40c4f7c7b3ca500f8985eb3fb3a7dfc023215e876f207956b5ea26632a"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-macosx_10_9_x86_64.whl", hash = "sha256:f846c260f483d1fd217fe5ed7c173fb109efa6b1fc8381c8b7552c5781756192"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:5ff5cf3571589b6d13bfbfd6bcd7a3f659e42f96b5fd1c4830c4cf21d4f5ef45"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:7269d9e5f1084a653d575c7ec012ff57f0c042258bf5db0954bf551c158466e7"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:da802a19d6e15dffe4b0c24b38b3af68e6c1a68e6e1d8f30148c83864f3881db"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:3aba7311af82e335dd1e36ffff68aaca609ca6290c2cb6d821a39aa075d8e3ff"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:763773d53f07244148ccac5b084da5adb90bfaee39c197554f01b286cf869228"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:2270953c0d8cdab5d422bee7d2007f043473f9d2999631c86a223c9db56cbd16"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-musllinux_1_1_aarch64.whl", hash = "sha256:d099e745a512f7e3bbe7249ca835f4d357c586d78d79ae8f1dcd4d8adeb9bda9"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-musllinux_1_1_i686.whl", hash = "sha256:74db36e14a7d1ce0986fa104f7d5637aea5c82ca6326ed0ec5694280942d1162"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-musllinux_1_1_ppc64le.whl", hash = "sha256:7e5bab140c309cb3a6ce373a9e71eb7e4873c70c2dda01df6820474f9889d6d4"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-musllinux_1_1_s390x.whl", hash = "sha256:0f114aa76dc1b8f636d077979c0ac22e7cd8f3493abbab152f20eb8d3cda71f3"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:88a2df29d4724b9237fc0c6eaf2a1adae0cdc0b3e9f4d8e7dc54b16812d2d81a"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-win32.whl", hash = "sha256:72d40b33e834371fd330fb1472ca19d9b8327acb79a5821d4008391db8e29f20"},
+    {file = "kiwisolver-1.4.5-cp312-cp312-win_amd64.whl", hash = "sha256:2c5674c4e74d939b9d91dda0fae10597ac7521768fec9e399c70a1f27e2ea2d9"},
+    {file = "kiwisolver-1.4.5-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:3a2b053a0ab7a3960c98725cfb0bf5b48ba82f64ec95fe06f1d06c99b552e130"},
+    {file = "kiwisolver-1.4.5-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:3cd32d6c13807e5c66a7cbb79f90b553642f296ae4518a60d8d76243b0ad2898"},
+    {file = "kiwisolver-1.4.5-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:59ec7b7c7e1a61061850d53aaf8e93db63dce0c936db1fda2658b70e4a1be709"},
+    {file = "kiwisolver-1.4.5-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:da4cfb373035def307905d05041c1d06d8936452fe89d464743ae7fb8371078b"},
+    {file = "kiwisolver-1.4.5-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:2400873bccc260b6ae184b2b8a4fec0e4082d30648eadb7c3d9a13405d861e89"},
+    {file = "kiwisolver-1.4.5-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:1b04139c4236a0f3aff534479b58f6f849a8b351e1314826c2d230849ed48985"},
+    {file = "kiwisolver-1.4.5-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:4e66e81a5779b65ac21764c295087de82235597a2293d18d943f8e9e32746265"},
+    {file = "kiwisolver-1.4.5-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:7931d8f1f67c4be9ba1dd9c451fb0eeca1a25b89e4d3f89e828fe12a519b782a"},
+    {file = "kiwisolver-1.4.5-cp37-cp37m-musllinux_1_1_ppc64le.whl", hash = "sha256:b3f7e75f3015df442238cca659f8baa5f42ce2a8582727981cbfa15fee0ee205"},
+    {file = "kiwisolver-1.4.5-cp37-cp37m-musllinux_1_1_s390x.whl", hash = "sha256:bbf1d63eef84b2e8c89011b7f2235b1e0bf7dacc11cac9431fc6468e99ac77fb"},
+    {file = "kiwisolver-1.4.5-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:4c380469bd3f970ef677bf2bcba2b6b0b4d5c75e7a020fb863ef75084efad66f"},
+    {file = "kiwisolver-1.4.5-cp37-cp37m-win32.whl", hash = "sha256:9408acf3270c4b6baad483865191e3e582b638b1654a007c62e3efe96f09a9a3"},
+    {file = "kiwisolver-1.4.5-cp37-cp37m-win_amd64.whl", hash = "sha256:5b94529f9b2591b7af5f3e0e730a4e0a41ea174af35a4fd067775f9bdfeee01a"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:11c7de8f692fc99816e8ac50d1d1aef4f75126eefc33ac79aac02c099fd3db71"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:53abb58632235cd154176ced1ae8f0d29a6657aa1aa9decf50b899b755bc2b93"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:88b9f257ca61b838b6f8094a62418421f87ac2a1069f7e896c36a7d86b5d4c29"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:3195782b26fc03aa9c6913d5bad5aeb864bdc372924c093b0f1cebad603dd712"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:fc579bf0f502e54926519451b920e875f433aceb4624a3646b3252b5caa9e0b6"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:5a580c91d686376f0f7c295357595c5a026e6cbc3d77b7c36e290201e7c11ecb"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:cfe6ab8da05c01ba6fbea630377b5da2cd9bcbc6338510116b01c1bc939a2c18"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl", hash = "sha256:d2e5a98f0ec99beb3c10e13b387f8db39106d53993f498b295f0c914328b1333"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:a51a263952b1429e429ff236d2f5a21c5125437861baeed77f5e1cc2d2c7c6da"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:3edd2fa14e68c9be82c5b16689e8d63d89fe927e56debd6e1dbce7a26a17f81b"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-musllinux_1_1_ppc64le.whl", hash = "sha256:74d1b44c6cfc897df648cc9fdaa09bc3e7679926e6f96df05775d4fb3946571c"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-musllinux_1_1_s390x.whl", hash = "sha256:76d9289ed3f7501012e05abb8358bbb129149dbd173f1f57a1bf1c22d19ab7cc"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:92dea1ffe3714fa8eb6a314d2b3c773208d865a0e0d35e713ec54eea08a66250"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-win32.whl", hash = "sha256:5c90ae8c8d32e472be041e76f9d2f2dbff4d0b0be8bd4041770eddb18cf49a4e"},
+    {file = "kiwisolver-1.4.5-cp38-cp38-win_amd64.whl", hash = "sha256:c7940c1dc63eb37a67721b10d703247552416f719c4188c54e04334321351ced"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:9407b6a5f0d675e8a827ad8742e1d6b49d9c1a1da5d952a67d50ef5f4170b18d"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:15568384086b6df3c65353820a4473575dbad192e35010f622c6ce3eebd57af9"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:0dc9db8e79f0036e8173c466d21ef18e1befc02de8bf8aa8dc0813a6dc8a7046"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:cdc8a402aaee9a798b50d8b827d7ecf75edc5fb35ea0f91f213ff927c15f4ff0"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:6c3bd3cde54cafb87d74d8db50b909705c62b17c2099b8f2e25b461882e544ff"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:955e8513d07a283056b1396e9a57ceddbd272d9252c14f154d450d227606eb54"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:346f5343b9e3f00b8db8ba359350eb124b98c99efd0b408728ac6ebf38173958"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:b9098e0049e88c6a24ff64545cdfc50807818ba6c1b739cae221bbbcbc58aad3"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:00bd361b903dc4bbf4eb165f24d1acbee754fce22ded24c3d56eec268658a5cf"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:7b8b454bac16428b22560d0a1cf0a09875339cab69df61d7805bf48919415901"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-musllinux_1_1_ppc64le.whl", hash = "sha256:f1d072c2eb0ad60d4c183f3fb44ac6f73fb7a8f16a2694a91f988275cbf352f9"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-musllinux_1_1_s390x.whl", hash = "sha256:31a82d498054cac9f6d0b53d02bb85811185bcb477d4b60144f915f3b3126342"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:6512cb89e334e4700febbffaaa52761b65b4f5a3cf33f960213d5656cea36a77"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-win32.whl", hash = "sha256:9db8ea4c388fdb0f780fe91346fd438657ea602d58348753d9fb265ce1bca67f"},
+    {file = "kiwisolver-1.4.5-cp39-cp39-win_amd64.whl", hash = "sha256:59415f46a37f7f2efeec758353dd2eae1b07640d8ca0f0c42548ec4125492635"},
+    {file = "kiwisolver-1.4.5-pp37-pypy37_pp73-macosx_10_9_x86_64.whl", hash = "sha256:5c7b3b3a728dc6faf3fc372ef24f21d1e3cee2ac3e9596691d746e5a536de920"},
+    {file = "kiwisolver-1.4.5-pp37-pypy37_pp73-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:620ced262a86244e2be10a676b646f29c34537d0d9cc8eb26c08f53d98013390"},
+    {file = "kiwisolver-1.4.5-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:378a214a1e3bbf5ac4a8708304318b4f890da88c9e6a07699c4ae7174c09a68d"},
+    {file = "kiwisolver-1.4.5-pp37-pypy37_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:aaf7be1207676ac608a50cd08f102f6742dbfc70e8d60c4db1c6897f62f71523"},
+    {file = "kiwisolver-1.4.5-pp37-pypy37_pp73-win_amd64.whl", hash = "sha256:ba55dce0a9b8ff59495ddd050a0225d58bd0983d09f87cfe2b6aec4f2c1234e4"},
+    {file = "kiwisolver-1.4.5-pp38-pypy38_pp73-macosx_10_9_x86_64.whl", hash = "sha256:fd32ea360bcbb92d28933fc05ed09bffcb1704ba3fc7942e81db0fd4f81a7892"},
+    {file = "kiwisolver-1.4.5-pp38-pypy38_pp73-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:5e7139af55d1688f8b960ee9ad5adafc4ac17c1c473fe07133ac092310d76544"},
+    {file = "kiwisolver-1.4.5-pp38-pypy38_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:dced8146011d2bc2e883f9bd68618b8247387f4bbec46d7392b3c3b032640126"},
+    {file = "kiwisolver-1.4.5-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:c9bf3325c47b11b2e51bca0824ea217c7cd84491d8ac4eefd1e409705ef092bd"},
+    {file = "kiwisolver-1.4.5-pp38-pypy38_pp73-win_amd64.whl", hash = "sha256:5794cf59533bc3f1b1c821f7206a3617999db9fbefc345360aafe2e067514929"},
+    {file = "kiwisolver-1.4.5-pp39-pypy39_pp73-macosx_10_9_x86_64.whl", hash = "sha256:e368f200bbc2e4f905b8e71eb38b3c04333bddaa6a2464a6355487b02bb7fb09"},
+    {file = "kiwisolver-1.4.5-pp39-pypy39_pp73-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:e5d706eba36b4c4d5bc6c6377bb6568098765e990cfc21ee16d13963fab7b3e7"},
+    {file = "kiwisolver-1.4.5-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:85267bd1aa8880a9c88a8cb71e18d3d64d2751a790e6ca6c27b8ccc724bcd5ad"},
+    {file = "kiwisolver-1.4.5-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:210ef2c3a1f03272649aff1ef992df2e724748918c4bc2d5a90352849eb40bea"},
+    {file = "kiwisolver-1.4.5-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:11d011a7574eb3b82bcc9c1a1d35c1d7075677fdd15de527d91b46bd35e935ee"},
+    {file = "kiwisolver-1.4.5.tar.gz", hash = "sha256:e57e563a57fb22a142da34f38acc2fc1a5c864bc29ca1517a88abc963e60d6ec"},
+]
+
 [[package]]
 name = "kubernetes"
 version = "29.0.0"
@@ -2124,6 +2449,54 @@ dev = ["marshmallow[tests]", "pre-commit (>=3.5,<4.0)", "tox"]
 docs = ["alabaster (==0.7.16)", "autodocsumm (==0.2.12)", "sphinx (==7.2.6)", "sphinx-issues (==4.0.0)", "sphinx-version-warning (==1.1.2)"]
 tests = ["pytest", "pytz", "simplejson"]
 
+[[package]]
+name = "matplotlib"
+version = "3.8.3"
+description = "Python plotting package"
+optional = false
+python-versions = ">=3.9"
+files = [
+    {file = "matplotlib-3.8.3-cp310-cp310-macosx_10_12_x86_64.whl", hash = "sha256:cf60138ccc8004f117ab2a2bad513cc4d122e55864b4fe7adf4db20ca68a078f"},
+    {file = "matplotlib-3.8.3-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:5f557156f7116be3340cdeef7f128fa99b0d5d287d5f41a16e169819dcf22357"},
+    {file = "matplotlib-3.8.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:f386cf162b059809ecfac3bcc491a9ea17da69fa35c8ded8ad154cd4b933d5ec"},
+    {file = "matplotlib-3.8.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:b3c5f96f57b0369c288bf6f9b5274ba45787f7e0589a34d24bdbaf6d3344632f"},
+    {file = "matplotlib-3.8.3-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:83e0f72e2c116ca7e571c57aa29b0fe697d4c6425c4e87c6e994159e0c008635"},
+    {file = "matplotlib-3.8.3-cp310-cp310-win_amd64.whl", hash = "sha256:1c5c8290074ba31a41db1dc332dc2b62def469ff33766cbe325d32a3ee291aea"},
+    {file = "matplotlib-3.8.3-cp311-cp311-macosx_10_12_x86_64.whl", hash = "sha256:5184e07c7e1d6d1481862ee361905b7059f7fe065fc837f7c3dc11eeb3f2f900"},
+    {file = "matplotlib-3.8.3-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:d7e7e0993d0758933b1a241a432b42c2db22dfa37d4108342ab4afb9557cbe3e"},
+    {file = "matplotlib-3.8.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:04b36ad07eac9740fc76c2aa16edf94e50b297d6eb4c081e3add863de4bb19a7"},
+    {file = "matplotlib-3.8.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:7c42dae72a62f14982f1474f7e5c9959fc4bc70c9de11cc5244c6e766200ba65"},
+    {file = "matplotlib-3.8.3-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:bf5932eee0d428192c40b7eac1399d608f5d995f975cdb9d1e6b48539a5ad8d0"},
+    {file = "matplotlib-3.8.3-cp311-cp311-win_amd64.whl", hash = "sha256:40321634e3a05ed02abf7c7b47a50be50b53ef3eaa3a573847431a545585b407"},
+    {file = "matplotlib-3.8.3-cp312-cp312-macosx_10_12_x86_64.whl", hash = "sha256:09074f8057917d17ab52c242fdf4916f30e99959c1908958b1fc6032e2d0f6d4"},
+    {file = "matplotlib-3.8.3-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:5745f6d0fb5acfabbb2790318db03809a253096e98c91b9a31969df28ee604aa"},
+    {file = "matplotlib-3.8.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:b97653d869a71721b639714b42d87cda4cfee0ee74b47c569e4874c7590c55c5"},
+    {file = "matplotlib-3.8.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:242489efdb75b690c9c2e70bb5c6550727058c8a614e4c7716f363c27e10bba1"},
+    {file = "matplotlib-3.8.3-cp312-cp312-musllinux_1_1_x86_64.whl", hash = "sha256:83c0653c64b73926730bd9ea14aa0f50f202ba187c307a881673bad4985967b7"},
+    {file = "matplotlib-3.8.3-cp312-cp312-win_amd64.whl", hash = "sha256:ef6c1025a570354297d6c15f7d0f296d95f88bd3850066b7f1e7b4f2f4c13a39"},
+    {file = "matplotlib-3.8.3-cp39-cp39-macosx_10_12_x86_64.whl", hash = "sha256:c4af3f7317f8a1009bbb2d0bf23dfaba859eb7dd4ccbd604eba146dccaaaf0a4"},
+    {file = "matplotlib-3.8.3-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:4c6e00a65d017d26009bac6808f637b75ceade3e1ff91a138576f6b3065eeeba"},
+    {file = "matplotlib-3.8.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:e7b49ab49a3bea17802df6872f8d44f664ba8f9be0632a60c99b20b6db2165b7"},
+    {file = "matplotlib-3.8.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:6728dde0a3997396b053602dbd907a9bd64ec7d5cf99e728b404083698d3ca01"},
+    {file = "matplotlib-3.8.3-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:813925d08fb86aba139f2d31864928d67511f64e5945ca909ad5bc09a96189bb"},
+    {file = "matplotlib-3.8.3-cp39-cp39-win_amd64.whl", hash = "sha256:cd3a0c2be76f4e7be03d34a14d49ded6acf22ef61f88da600a18a5cd8b3c5f3c"},
+    {file = "matplotlib-3.8.3-pp39-pypy39_pp73-macosx_10_12_x86_64.whl", hash = "sha256:fa93695d5c08544f4a0dfd0965f378e7afc410d8672816aff1e81be1f45dbf2e"},
+    {file = "matplotlib-3.8.3-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:e9764df0e8778f06414b9d281a75235c1e85071f64bb5d71564b97c1306a2afc"},
+    {file = "matplotlib-3.8.3-pp39-pypy39_pp73-win_amd64.whl", hash = "sha256:5e431a09e6fab4012b01fc155db0ce6dccacdbabe8198197f523a4ef4805eb26"},
+    {file = "matplotlib-3.8.3.tar.gz", hash = "sha256:7b416239e9ae38be54b028abbf9048aff5054a9aba5416bef0bd17f9162ce161"},
+]
+
+[package.dependencies]
+contourpy = ">=1.0.1"
+cycler = ">=0.10"
+fonttools = ">=4.22.0"
+kiwisolver = ">=1.3.1"
+numpy = ">=1.21,<2"
+packaging = ">=20.0"
+pillow = ">=8"
+pyparsing = ">=2.3.1"
+python-dateutil = ">=2.7"
+
 [[package]]
 name = "matplotlib-inline"
 version = "0.1.6"
@@ -2392,6 +2765,27 @@ files = [
     {file = "mypy_extensions-1.0.0.tar.gz", hash = "sha256:75dbf8955dc00442a438fc4d0666508a9a97b6bd41aa2f0ffe9d2f2725af0782"},
 ]
 
+[[package]]
+name = "nbformat"
+version = "5.10.2"
+description = "The Jupyter Notebook format"
+optional = false
+python-versions = ">=3.8"
+files = [
+    {file = "nbformat-5.10.2-py3-none-any.whl", hash = "sha256:7381189a0d537586b3f18bae5dbad347d7dd0a7cf0276b09cdcd5c24d38edd99"},
+    {file = "nbformat-5.10.2.tar.gz", hash = "sha256:c535b20a0d4310167bf4d12ad31eccfb0dc61e6392d6f8c570ab5b45a06a49a3"},
+]
+
+[package.dependencies]
+fastjsonschema = "*"
+jsonschema = ">=2.6"
+jupyter-core = "*"
+traitlets = ">=5.1"
+
+[package.extras]
+docs = ["myst-parser", "pydata-sphinx-theme", "sphinx", "sphinxcontrib-github-alt", "sphinxcontrib-spelling"]
+test = ["pep440", "pre-commit", "pytest", "testpath"]
+
 [[package]]
 name = "nest-asyncio"
 version = "1.6.0"
@@ -3180,6 +3574,36 @@ tests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "pa
 typing = ["typing-extensions"]
 xmp = ["defusedxml"]
 
+[[package]]
+name = "platformdirs"
+version = "4.2.0"
+description = "A small Python package for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
+optional = false
+python-versions = ">=3.8"
+files = [
+    {file = "platformdirs-4.2.0-py3-none-any.whl", hash = "sha256:0614df2a2f37e1a662acbd8e2b25b92ccf8632929bc6d43467e17fe89c75e068"},
+    {file = "platformdirs-4.2.0.tar.gz", hash = "sha256:ef0cc731df711022c174543cb70a9b5bd22e5a9337c8624ef2c2ceb8ddad8768"},
+]
+
+[package.extras]
+docs = ["furo (>=2023.9.10)", "proselint (>=0.13)", "sphinx (>=7.2.6)", "sphinx-autodoc-typehints (>=1.25.2)"]
+test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest (>=7.4.3)", "pytest-cov (>=4.1)", "pytest-mock (>=3.12)"]
+
+[[package]]
+name = "plotly"
+version = "5.20.0"
+description = "An open-source, interactive data visualization library for Python"
+optional = false
+python-versions = ">=3.8"
+files = [
+    {file = "plotly-5.20.0-py3-none-any.whl", hash = "sha256:837a9c8aa90f2c0a2f0d747b82544d014dc2a2bdde967b5bb1da25b53932d1a9"},
+    {file = "plotly-5.20.0.tar.gz", hash = "sha256:bf901c805d22032cfa534b2ff7c5aa6b0659e037f19ec1e0cca7f585918b5c89"},
+]
+
+[package.dependencies]
+packaging = "*"
+tenacity = ">=6.2.0"
+
 [[package]]
 name = "pluggy"
 version = "1.4.0"
@@ -3663,6 +4087,20 @@ files = [
     {file = "PyMuPDFb-1.23.22-py3-none-win_amd64.whl", hash = "sha256:7c9c157281fdee9f296e666a323307dbf74cb38f017921bb131fa7bfcd39c2bd"},
 ]
 
+[[package]]
+name = "pyparsing"
+version = "3.1.2"
+description = "pyparsing module - Classes and methods to define and execute parsing grammars"
+optional = false
+python-versions = ">=3.6.8"
+files = [
+    {file = "pyparsing-3.1.2-py3-none-any.whl", hash = "sha256:f9db75911801ed778fe61bb643079ff86601aca99fcae6345aa67292038fb742"},
+    {file = "pyparsing-3.1.2.tar.gz", hash = "sha256:a1bac0ce561155ecc3ed78ca94d3c9378656ad4c94c1270de543f621420f94ad"},
+]
+
+[package.extras]
+diagrams = ["jinja2", "railroad-diagrams"]
+
 [[package]]
 name = "pypdf"
 version = "4.1.0"
@@ -3809,6 +4247,29 @@ jinja2 = ">=2.9.6"
 jsonpickle = ">=1.4.1"
 networkx = ">=1.11"
 
+[[package]]
+name = "pywin32"
+version = "306"
+description = "Python for Window Extensions"
+optional = false
+python-versions = "*"
+files = [
+    {file = "pywin32-306-cp310-cp310-win32.whl", hash = "sha256:06d3420a5155ba65f0b72f2699b5bacf3109f36acbe8923765c22938a69dfc8d"},
+    {file = "pywin32-306-cp310-cp310-win_amd64.whl", hash = "sha256:84f4471dbca1887ea3803d8848a1616429ac94a4a8d05f4bc9c5dcfd42ca99c8"},
+    {file = "pywin32-306-cp311-cp311-win32.whl", hash = "sha256:e65028133d15b64d2ed8f06dd9fbc268352478d4f9289e69c190ecd6818b6407"},
+    {file = "pywin32-306-cp311-cp311-win_amd64.whl", hash = "sha256:a7639f51c184c0272e93f244eb24dafca9b1855707d94c192d4a0b4c01e1100e"},
+    {file = "pywin32-306-cp311-cp311-win_arm64.whl", hash = "sha256:70dba0c913d19f942a2db25217d9a1b726c278f483a919f1abfed79c9cf64d3a"},
+    {file = "pywin32-306-cp312-cp312-win32.whl", hash = "sha256:383229d515657f4e3ed1343da8be101000562bf514591ff383ae940cad65458b"},
+    {file = "pywin32-306-cp312-cp312-win_amd64.whl", hash = "sha256:37257794c1ad39ee9be652da0462dc2e394c8159dfd913a8a4e8eb6fd346da0e"},
+    {file = "pywin32-306-cp312-cp312-win_arm64.whl", hash = "sha256:5821ec52f6d321aa59e2db7e0a35b997de60c201943557d108af9d4ae1ec7040"},
+    {file = "pywin32-306-cp37-cp37m-win32.whl", hash = "sha256:1c73ea9a0d2283d889001998059f5eaaba3b6238f767c9cf2833b13e6a685f65"},
+    {file = "pywin32-306-cp37-cp37m-win_amd64.whl", hash = "sha256:72c5f621542d7bdd4fdb716227be0dd3f8565c11b280be6315b06ace35487d36"},
+    {file = "pywin32-306-cp38-cp38-win32.whl", hash = "sha256:e4c092e2589b5cf0d365849e73e02c391c1349958c5ac3e9d5ccb9a28e017b3a"},
+    {file = "pywin32-306-cp38-cp38-win_amd64.whl", hash = "sha256:e8ac1ae3601bee6ca9f7cb4b5363bf1c0badb935ef243c4733ff9a393b1690c0"},
+    {file = "pywin32-306-cp39-cp39-win32.whl", hash = "sha256:e25fd5b485b55ac9c057f67d94bc203f3f6595078d1fb3b458c9c28b7153a802"},
+    {file = "pywin32-306-cp39-cp39-win_amd64.whl", hash = "sha256:39b61c15272833b5c329a2989999dcae836b1eed650252ab1b7bfbe1d59f30f4"},
+]
+
 [[package]]
 name = "pyyaml"
 version = "6.0.1"
@@ -3887,6 +4348,21 @@ async-timeout = {version = ">=4.0.3", markers = "python_full_version < \"3.11.3\
 hiredis = ["hiredis (>=1.0.0)"]
 ocsp = ["cryptography (>=36.0.1)", "pyopenssl (==20.0.1)", "requests (>=2.26.0)"]
 
+[[package]]
+name = "referencing"
+version = "0.33.0"
+description = "JSON Referencing + Python"
+optional = false
+python-versions = ">=3.8"
+files = [
+    {file = "referencing-0.33.0-py3-none-any.whl", hash = "sha256:39240f2ecc770258f28b642dd47fd74bc8b02484de54e1882b74b35ebd779bd5"},
+    {file = "referencing-0.33.0.tar.gz", hash = "sha256:c775fedf74bc0f9189c2a3be1c12fd03e8c23f4d371dce795df44e06c5b412f7"},
+]
+
+[package.dependencies]
+attrs = ">=22.2.0"
+rpds-py = ">=0.7.0"
+
 [[package]]
 name = "regex"
 version = "2023.12.25"
@@ -4028,6 +4504,114 @@ requests = ">=2.0.0"
 [package.extras]
 rsa = ["oauthlib[signedtoken] (>=3.0.0)"]
 
+[[package]]
+name = "rpds-py"
+version = "0.18.0"
+description = "Python bindings to Rust's persistent data structures (rpds)"
+optional = false
+python-versions = ">=3.8"
+files = [
+    {file = "rpds_py-0.18.0-cp310-cp310-macosx_10_12_x86_64.whl", hash = "sha256:5b4e7d8d6c9b2e8ee2d55c90b59c707ca59bc30058269b3db7b1f8df5763557e"},
+    {file = "rpds_py-0.18.0-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:c463ed05f9dfb9baebef68048aed8dcdc94411e4bf3d33a39ba97e271624f8f7"},
+    {file = "rpds_py-0.18.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:01e36a39af54a30f28b73096dd39b6802eddd04c90dbe161c1b8dbe22353189f"},
+    {file = "rpds_py-0.18.0-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:d62dec4976954a23d7f91f2f4530852b0c7608116c257833922a896101336c51"},
+    {file = "rpds_py-0.18.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:dd18772815d5f008fa03d2b9a681ae38d5ae9f0e599f7dda233c439fcaa00d40"},
+    {file = "rpds_py-0.18.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:923d39efa3cfb7279a0327e337a7958bff00cc447fd07a25cddb0a1cc9a6d2da"},
+    {file = "rpds_py-0.18.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:39514da80f971362f9267c600b6d459bfbbc549cffc2cef8e47474fddc9b45b1"},
+    {file = "rpds_py-0.18.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:a34d557a42aa28bd5c48a023c570219ba2593bcbbb8dc1b98d8cf5d529ab1434"},
+    {file = "rpds_py-0.18.0-cp310-cp310-musllinux_1_2_aarch64.whl", hash = "sha256:93df1de2f7f7239dc9cc5a4a12408ee1598725036bd2dedadc14d94525192fc3"},
+    {file = "rpds_py-0.18.0-cp310-cp310-musllinux_1_2_i686.whl", hash = "sha256:34b18ba135c687f4dac449aa5157d36e2cbb7c03cbea4ddbd88604e076aa836e"},
+    {file = "rpds_py-0.18.0-cp310-cp310-musllinux_1_2_x86_64.whl", hash = "sha256:c0b5dcf9193625afd8ecc92312d6ed78781c46ecbf39af9ad4681fc9f464af88"},
+    {file = "rpds_py-0.18.0-cp310-none-win32.whl", hash = "sha256:c4325ff0442a12113a6379af66978c3fe562f846763287ef66bdc1d57925d337"},
+    {file = "rpds_py-0.18.0-cp310-none-win_amd64.whl", hash = "sha256:7223a2a5fe0d217e60a60cdae28d6949140dde9c3bcc714063c5b463065e3d66"},
+    {file = "rpds_py-0.18.0-cp311-cp311-macosx_10_12_x86_64.whl", hash = "sha256:3a96e0c6a41dcdba3a0a581bbf6c44bb863f27c541547fb4b9711fd8cf0ffad4"},
+    {file = "rpds_py-0.18.0-cp311-cp311-macosx_11_0_arm64.whl", hash = "sha256:30f43887bbae0d49113cbaab729a112251a940e9b274536613097ab8b4899cf6"},
+    {file = "rpds_py-0.18.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:fcb25daa9219b4cf3a0ab24b0eb9a5cc8949ed4dc72acb8fa16b7e1681aa3c58"},
+    {file = "rpds_py-0.18.0-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:d68c93e381010662ab873fea609bf6c0f428b6d0bb00f2c6939782e0818d37bf"},
+    {file = "rpds_py-0.18.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:b34b7aa8b261c1dbf7720b5d6f01f38243e9b9daf7e6b8bc1fd4657000062f2c"},
+    {file = "rpds_py-0.18.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:2e6d75ab12b0bbab7215e5d40f1e5b738aa539598db27ef83b2ec46747df90e1"},
+    {file = "rpds_py-0.18.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:0b8612cd233543a3781bc659c731b9d607de65890085098986dfd573fc2befe5"},
+    {file = "rpds_py-0.18.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:aec493917dd45e3c69d00a8874e7cbed844efd935595ef78a0f25f14312e33c6"},
+    {file = "rpds_py-0.18.0-cp311-cp311-musllinux_1_2_aarch64.whl", hash = "sha256:661d25cbffaf8cc42e971dd570d87cb29a665f49f4abe1f9e76be9a5182c4688"},
+    {file = "rpds_py-0.18.0-cp311-cp311-musllinux_1_2_i686.whl", hash = "sha256:1df3659d26f539ac74fb3b0c481cdf9d725386e3552c6fa2974f4d33d78e544b"},
+    {file = "rpds_py-0.18.0-cp311-cp311-musllinux_1_2_x86_64.whl", hash = "sha256:a1ce3ba137ed54f83e56fb983a5859a27d43a40188ba798993812fed73c70836"},
+    {file = "rpds_py-0.18.0-cp311-none-win32.whl", hash = "sha256:69e64831e22a6b377772e7fb337533c365085b31619005802a79242fee620bc1"},
+    {file = "rpds_py-0.18.0-cp311-none-win_amd64.whl", hash = "sha256:998e33ad22dc7ec7e030b3df701c43630b5bc0d8fbc2267653577e3fec279afa"},
+    {file = "rpds_py-0.18.0-cp312-cp312-macosx_10_12_x86_64.whl", hash = "sha256:7f2facbd386dd60cbbf1a794181e6aa0bd429bd78bfdf775436020172e2a23f0"},
+    {file = "rpds_py-0.18.0-cp312-cp312-macosx_11_0_arm64.whl", hash = "sha256:1d9a5be316c15ffb2b3c405c4ff14448c36b4435be062a7f578ccd8b01f0c4d8"},
+    {file = "rpds_py-0.18.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cd5bf1af8efe569654bbef5a3e0a56eca45f87cfcffab31dd8dde70da5982475"},
+    {file = "rpds_py-0.18.0-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:5417558f6887e9b6b65b4527232553c139b57ec42c64570569b155262ac0754f"},
+    {file = "rpds_py-0.18.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:56a737287efecafc16f6d067c2ea0117abadcd078d58721f967952db329a3e5c"},
+    {file = "rpds_py-0.18.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:8f03bccbd8586e9dd37219bce4d4e0d3ab492e6b3b533e973fa08a112cb2ffc9"},
+    {file = "rpds_py-0.18.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:4457a94da0d5c53dc4b3e4de1158bdab077db23c53232f37a3cb7afdb053a4e3"},
+    {file = "rpds_py-0.18.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:0ab39c1ba9023914297dd88ec3b3b3c3f33671baeb6acf82ad7ce883f6e8e157"},
+    {file = "rpds_py-0.18.0-cp312-cp312-musllinux_1_2_aarch64.whl", hash = "sha256:9d54553c1136b50fd12cc17e5b11ad07374c316df307e4cfd6441bea5fb68496"},
+    {file = "rpds_py-0.18.0-cp312-cp312-musllinux_1_2_i686.whl", hash = "sha256:0af039631b6de0397ab2ba16eaf2872e9f8fca391b44d3d8cac317860a700a3f"},
+    {file = "rpds_py-0.18.0-cp312-cp312-musllinux_1_2_x86_64.whl", hash = "sha256:84ffab12db93b5f6bad84c712c92060a2d321b35c3c9960b43d08d0f639d60d7"},
+    {file = "rpds_py-0.18.0-cp312-none-win32.whl", hash = "sha256:685537e07897f173abcf67258bee3c05c374fa6fff89d4c7e42fb391b0605e98"},
+    {file = "rpds_py-0.18.0-cp312-none-win_amd64.whl", hash = "sha256:e003b002ec72c8d5a3e3da2989c7d6065b47d9eaa70cd8808b5384fbb970f4ec"},
+    {file = "rpds_py-0.18.0-cp38-cp38-macosx_10_12_x86_64.whl", hash = "sha256:08f9ad53c3f31dfb4baa00da22f1e862900f45908383c062c27628754af2e88e"},
+    {file = "rpds_py-0.18.0-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:c0013fe6b46aa496a6749c77e00a3eb07952832ad6166bd481c74bda0dcb6d58"},
+    {file = "rpds_py-0.18.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:e32a92116d4f2a80b629778280103d2a510a5b3f6314ceccd6e38006b5e92dcb"},
+    {file = "rpds_py-0.18.0-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:e541ec6f2ec456934fd279a3120f856cd0aedd209fc3852eca563f81738f6861"},
+    {file = "rpds_py-0.18.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:bed88b9a458e354014d662d47e7a5baafd7ff81c780fd91584a10d6ec842cb73"},
+    {file = "rpds_py-0.18.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:2644e47de560eb7bd55c20fc59f6daa04682655c58d08185a9b95c1970fa1e07"},
+    {file = "rpds_py-0.18.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:8e8916ae4c720529e18afa0b879473049e95949bf97042e938530e072fde061d"},
+    {file = "rpds_py-0.18.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:465a3eb5659338cf2a9243e50ad9b2296fa15061736d6e26240e713522b6235c"},
+    {file = "rpds_py-0.18.0-cp38-cp38-musllinux_1_2_aarch64.whl", hash = "sha256:ea7d4a99f3b38c37eac212dbd6ec42b7a5ec51e2c74b5d3223e43c811609e65f"},
+    {file = "rpds_py-0.18.0-cp38-cp38-musllinux_1_2_i686.whl", hash = "sha256:67071a6171e92b6da534b8ae326505f7c18022c6f19072a81dcf40db2638767c"},
+    {file = "rpds_py-0.18.0-cp38-cp38-musllinux_1_2_x86_64.whl", hash = "sha256:41ef53e7c58aa4ef281da975f62c258950f54b76ec8e45941e93a3d1d8580594"},
+    {file = "rpds_py-0.18.0-cp38-none-win32.whl", hash = "sha256:fdea4952db2793c4ad0bdccd27c1d8fdd1423a92f04598bc39425bcc2b8ee46e"},
+    {file = "rpds_py-0.18.0-cp38-none-win_amd64.whl", hash = "sha256:7cd863afe7336c62ec78d7d1349a2f34c007a3cc6c2369d667c65aeec412a5b1"},
+    {file = "rpds_py-0.18.0-cp39-cp39-macosx_10_12_x86_64.whl", hash = "sha256:5307def11a35f5ae4581a0b658b0af8178c65c530e94893345bebf41cc139d33"},
+    {file = "rpds_py-0.18.0-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:77f195baa60a54ef9d2de16fbbfd3ff8b04edc0c0140a761b56c267ac11aa467"},
+    {file = "rpds_py-0.18.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:39f5441553f1c2aed4de4377178ad8ff8f9d733723d6c66d983d75341de265ab"},
+    {file = "rpds_py-0.18.0-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:9a00312dea9310d4cb7dbd7787e722d2e86a95c2db92fbd7d0155f97127bcb40"},
+    {file = "rpds_py-0.18.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:8f2fc11e8fe034ee3c34d316d0ad8808f45bc3b9ce5857ff29d513f3ff2923a1"},
+    {file = "rpds_py-0.18.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:586f8204935b9ec884500498ccc91aa869fc652c40c093bd9e1471fbcc25c022"},
+    {file = "rpds_py-0.18.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:ddc2f4dfd396c7bfa18e6ce371cba60e4cf9d2e5cdb71376aa2da264605b60b9"},
+    {file = "rpds_py-0.18.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:5ddcba87675b6d509139d1b521e0c8250e967e63b5909a7e8f8944d0f90ff36f"},
+    {file = "rpds_py-0.18.0-cp39-cp39-musllinux_1_2_aarch64.whl", hash = "sha256:7bd339195d84439cbe5771546fe8a4e8a7a045417d8f9de9a368c434e42a721e"},
+    {file = "rpds_py-0.18.0-cp39-cp39-musllinux_1_2_i686.whl", hash = "sha256:d7c36232a90d4755b720fbd76739d8891732b18cf240a9c645d75f00639a9024"},
+    {file = "rpds_py-0.18.0-cp39-cp39-musllinux_1_2_x86_64.whl", hash = "sha256:6b0817e34942b2ca527b0e9298373e7cc75f429e8da2055607f4931fded23e20"},
+    {file = "rpds_py-0.18.0-cp39-none-win32.whl", hash = "sha256:99f70b740dc04d09e6b2699b675874367885217a2e9f782bdf5395632ac663b7"},
+    {file = "rpds_py-0.18.0-cp39-none-win_amd64.whl", hash = "sha256:6ef687afab047554a2d366e112dd187b62d261d49eb79b77e386f94644363294"},
+    {file = "rpds_py-0.18.0-pp310-pypy310_pp73-macosx_10_12_x86_64.whl", hash = "sha256:ad36cfb355e24f1bd37cac88c112cd7730873f20fb0bdaf8ba59eedf8216079f"},
+    {file = "rpds_py-0.18.0-pp310-pypy310_pp73-macosx_11_0_arm64.whl", hash = "sha256:36b3ee798c58ace201289024b52788161e1ea133e4ac93fba7d49da5fec0ef9e"},
+    {file = "rpds_py-0.18.0-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:f8a2f084546cc59ea99fda8e070be2fd140c3092dc11524a71aa8f0f3d5a55ca"},
+    {file = "rpds_py-0.18.0-pp310-pypy310_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:e4461d0f003a0aa9be2bdd1b798a041f177189c1a0f7619fe8c95ad08d9a45d7"},
+    {file = "rpds_py-0.18.0-pp310-pypy310_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:8db715ebe3bb7d86d77ac1826f7d67ec11a70dbd2376b7cc214199360517b641"},
+    {file = "rpds_py-0.18.0-pp310-pypy310_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:793968759cd0d96cac1e367afd70c235867831983f876a53389ad869b043c948"},
+    {file = "rpds_py-0.18.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:66e6a3af5a75363d2c9a48b07cb27c4ea542938b1a2e93b15a503cdfa8490795"},
+    {file = "rpds_py-0.18.0-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:6ef0befbb5d79cf32d0266f5cff01545602344eda89480e1dd88aca964260b18"},
+    {file = "rpds_py-0.18.0-pp310-pypy310_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:1d4acf42190d449d5e89654d5c1ed3a4f17925eec71f05e2a41414689cda02d1"},
+    {file = "rpds_py-0.18.0-pp310-pypy310_pp73-musllinux_1_2_i686.whl", hash = "sha256:a5f446dd5055667aabaee78487f2b5ab72e244f9bc0b2ffebfeec79051679984"},
+    {file = "rpds_py-0.18.0-pp310-pypy310_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:9dbbeb27f4e70bfd9eec1be5477517365afe05a9b2c441a0b21929ee61048124"},
+    {file = "rpds_py-0.18.0-pp38-pypy38_pp73-macosx_10_12_x86_64.whl", hash = "sha256:22806714311a69fd0af9b35b7be97c18a0fc2826e6827dbb3a8c94eac6cf7eeb"},
+    {file = "rpds_py-0.18.0-pp38-pypy38_pp73-macosx_11_0_arm64.whl", hash = "sha256:b34ae4636dfc4e76a438ab826a0d1eed2589ca7d9a1b2d5bb546978ac6485461"},
+    {file = "rpds_py-0.18.0-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:8c8370641f1a7f0e0669ddccca22f1da893cef7628396431eb445d46d893e5cd"},
+    {file = "rpds_py-0.18.0-pp38-pypy38_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:c8362467a0fdeccd47935f22c256bec5e6abe543bf0d66e3d3d57a8fb5731863"},
+    {file = "rpds_py-0.18.0-pp38-pypy38_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:11a8c85ef4a07a7638180bf04fe189d12757c696eb41f310d2426895356dcf05"},
+    {file = "rpds_py-0.18.0-pp38-pypy38_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:b316144e85316da2723f9d8dc75bada12fa58489a527091fa1d5a612643d1a0e"},
+    {file = "rpds_py-0.18.0-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:cf1ea2e34868f6fbf070e1af291c8180480310173de0b0c43fc38a02929fc0e3"},
+    {file = "rpds_py-0.18.0-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:e546e768d08ad55b20b11dbb78a745151acbd938f8f00d0cfbabe8b0199b9880"},
+    {file = "rpds_py-0.18.0-pp38-pypy38_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:4901165d170a5fde6f589acb90a6b33629ad1ec976d4529e769c6f3d885e3e80"},
+    {file = "rpds_py-0.18.0-pp38-pypy38_pp73-musllinux_1_2_i686.whl", hash = "sha256:618a3d6cae6ef8ec88bb76dd80b83cfe415ad4f1d942ca2a903bf6b6ff97a2da"},
+    {file = "rpds_py-0.18.0-pp38-pypy38_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:ed4eb745efbff0a8e9587d22a84be94a5eb7d2d99c02dacf7bd0911713ed14dd"},
+    {file = "rpds_py-0.18.0-pp39-pypy39_pp73-macosx_10_12_x86_64.whl", hash = "sha256:6c81e5f372cd0dc5dc4809553d34f832f60a46034a5f187756d9b90586c2c307"},
+    {file = "rpds_py-0.18.0-pp39-pypy39_pp73-macosx_11_0_arm64.whl", hash = "sha256:43fbac5f22e25bee1d482c97474f930a353542855f05c1161fd804c9dc74a09d"},
+    {file = "rpds_py-0.18.0-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:6d7faa6f14017c0b1e69f5e2c357b998731ea75a442ab3841c0dbbbfe902d2c4"},
+    {file = "rpds_py-0.18.0-pp39-pypy39_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:08231ac30a842bd04daabc4d71fddd7e6d26189406d5a69535638e4dcb88fe76"},
+    {file = "rpds_py-0.18.0-pp39-pypy39_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:044a3e61a7c2dafacae99d1e722cc2d4c05280790ec5a05031b3876809d89a5c"},
+    {file = "rpds_py-0.18.0-pp39-pypy39_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:3f26b5bd1079acdb0c7a5645e350fe54d16b17bfc5e71f371c449383d3342e17"},
+    {file = "rpds_py-0.18.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:482103aed1dfe2f3b71a58eff35ba105289b8d862551ea576bd15479aba01f66"},
+    {file = "rpds_py-0.18.0-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl", hash = "sha256:1374f4129f9bcca53a1bba0bb86bf78325a0374577cf7e9e4cd046b1e6f20e24"},
+    {file = "rpds_py-0.18.0-pp39-pypy39_pp73-musllinux_1_2_aarch64.whl", hash = "sha256:635dc434ff724b178cb192c70016cc0ad25a275228f749ee0daf0eddbc8183b1"},
+    {file = "rpds_py-0.18.0-pp39-pypy39_pp73-musllinux_1_2_i686.whl", hash = "sha256:bc362ee4e314870a70f4ae88772d72d877246537d9f8cb8f7eacf10884862432"},
+    {file = "rpds_py-0.18.0-pp39-pypy39_pp73-musllinux_1_2_x86_64.whl", hash = "sha256:4832d7d380477521a8c1644bbab6588dfedea5e30a7d967b5fb75977c45fd77f"},
+    {file = "rpds_py-0.18.0.tar.gz", hash = "sha256:42821446ee7a76f5d9f71f9e33a4fb2ffd724bb3e7f93386150b61a43115788d"},
+]
+
 [[package]]
 name = "rsa"
 version = "4.9"
@@ -5478,4 +6062,4 @@ testing = ["big-O", "jaraco.functools", "jaraco.itertools", "more-itertools", "p
 [metadata]
 lock-version = "2.0"
 python-versions = ">=3.11,<3.12"
-content-hash = "c8e28e35430eb60c4e3d099588c09f3c60d1629c735d734e060edac3ae4c0e2e"
+content-hash = "3d52caf945ebee5a56ab30f94f4350b008b1ab46ed79038ab3506705e9e314f0"
diff --git a/api/prompt_experimentation/pe_router.ipynb b/api/prompt_experimentation/pe_router.ipynb
index c68c723..0638d85 100644
--- a/api/prompt_experimentation/pe_router.ipynb
+++ b/api/prompt_experimentation/pe_router.ipynb
@@ -9,16 +9,78 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 1,
+   "execution_count": 89,
    "metadata": {},
    "outputs": [
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "/Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n",
-      "  from .autonotebook import tqdm as notebook_tqdm\n"
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33msom\u001b[0m (\u001b[33mcurieo\u001b[0m). Use \u001b[1m`wandb login --relogin`\u001b[0m to force relogin\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[33mWARNING\u001b[0m If you're specifying your api key in code, ensure this code is not shared publicly.\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[33mWARNING\u001b[0m Consider setting the WANDB_API_KEY environment variable, or running `wandb login` from the command line.\n",
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /Users/som/.netrc\n"
      ]
+    },
+    {
+     "data": {
+      "text/html": [
+       "Tracking run with wandb version 0.16.4"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Run data is saved locally in <code>/Users/som/Downloads/code/search/api/prompt_experimentation/wandb/run-20240314_121808-fn7j3pgb</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Syncing run <strong><a href='https://wandb.ai/curieo/pe_router/runs/fn7j3pgb' target=\"_blank\">pe_router_optimization</a></strong> to <a href='https://wandb.ai/curieo/pe_router' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       " View project at <a href='https://wandb.ai/curieo/pe_router' target=\"_blank\">https://wandb.ai/curieo/pe_router</a>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       " View run at <a href='https://wandb.ai/curieo/pe_router/runs/fn7j3pgb' target=\"_blank\">https://wandb.ai/curieo/pe_router/runs/fn7j3pgb</a>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
     }
    ],
    "source": [
@@ -30,17 +92,21 @@
     "import requests\n",
     "from dspy.teleprompt import BayesianSignatureOptimizer\n",
     "from dspy.evaluate.metrics import answer_exact_match\n",
+    "import wandb \n",
     "load_dotenv(\"../.env\")\n",
     "\n",
+    "wandb.login(key = os.environ['WANDB_API_KEY'])\n",
+    "run = wandb.init(project = \"pe_router\", name= \"pe_router_optimization\", entity = os.environ['WANDB_ENTITY'])\n",
+    "\n",
     "\n",
     "\n",
     "# CONFIG\n",
     "random_state = 42\n",
     "txt_to_idx = {\n",
-    "    'Clicnical Trials': '0',\n",
-    "    'pubmed': '1',\n",
-    "    'bioarxiv': '2',\n",
-    "    'chembl': '3'\n",
+    "    '0. useful for retrieving only the clinical trials information like adverse effects,eligibility details of clinical trials perticipents, sponsor details, death count, condition  of many healthcare problems': '0', # clinical trials\n",
+    "    '1. useful for retrieving general information about healthcare data. has various articles from pubmed which contains information about studies and research papers from healthcare domain': '1', # pubmed\n",
+    "    '2. useful for retiving the information about the life sciences, following article category is there Animal Behavior and Cognition, Biochemistry, Bioengineering, Bioinformatics, Biophysics, Cancer Biology, Cell Biology, Developmental Biology, Ecology, Evolutionary Biology, Genetics, Genomics, Immunology, Microbiology, Molecular Biology, Neuroscience, Paleontology, Pathology, Pharmacology and Toxicology, Physiology, Plant Biology, Scientific Communication and Education, Synthetic Biology, Systems Biology, Zoology': '2', # bioarxiv\n",
+    "    '3. useful only for retrieving the drug related information like molecular weights,similarities,smile codes, target medicines, effects on other medicine': '3' # chembl\n",
     "}\n",
     "\n",
     "NUM_THREADS = 5\n",
@@ -63,7 +129,7 @@
    "outputs": [],
    "source": [
     "turbo = dspy.OpenAI(model='gpt-3.5-turbo', api_key = os.environ[\"OPENAI_API_KEY\"])\n",
-    "mixtral = dspy.GROQ( api_key = os.environ['GROQ_API_KEY'], model = \"mixtral-8x7b-32768\",)\n",
+    "mixtral = dspy.GROQ( api_key = os.environ['GROQ_API_KEY'], model = \"gemma-7b-it\",)#mixtral-8x7b-32768\n",
     "# rm module is currently not available.\n",
     "\n",
     "dspy.settings.configure(lm=mixtral)"
@@ -78,7 +144,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 3,
+   "execution_count": 4,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -101,7 +167,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": 5,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -113,14 +179,20 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": 18,
    "metadata": {},
    "outputs": [],
    "source": [
+    "t_2_i = {\n",
+    "\"Clicnical Trials\": '0',\n",
+    "\"pubmed\": '1',\n",
+    "\"bioarxiv\": '2',\n",
+    "\"chembl\": '3',\n",
+    "}\n",
     "all_samples = pd.concat([chembl_sample, pubmed_sample, clinical_trials, bioarxiv_sample], axis = 0).sample(frac = 1)\n",
     "total_data = []\n",
     "for idx, row in enumerate(all_samples.iterrows()): \n",
-    "    dspy_example = dspy.Example({'question': row[1][\"Question\"], 'answer' : txt_to_idx[row[1]['route_option']]}).with_inputs(\"question\")\n",
+    "    dspy_example = dspy.Example({'question': row[1][\"Question\"], 'answer' : t_2_i[row[1]['route_option']]}).with_inputs(\"question\")\n",
     "    total_data.append(dspy_example)"
    ]
   },
@@ -133,24 +205,31 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 13,
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 141,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Question: What is the molecular formula for Aspirin?\n",
-      "Predicted Answer: The molecular formula for Aspirin is C9H8O4. This chemical compound, also known as acetylsalicylic acid, has a molecular weight of 180.15 g/mol and is commonly used as a pain reliever, fever reducer, and anti-inflammatory drug.\n"
+      "Question: What is the type of following study: Homeopathic Preparation Plumbum Metallicum for Lead Poisoning\n",
+      "Predicted Answer: 0\n"
      ]
     }
    ],
    "source": [
     "# setting up and testing the basic signature\n",
     "class QA(dspy.Signature):\n",
-    "    \"Study the `question` thoroughly to understand the context and meaning of the query before generating the `answer` based on accurate information and relevancy.\"\n",
+    "    \"Study the `question` thoroughly to understand the context and meaning of the query before generating the route to specific route.Routes the specific question to relavant service we have following services as option {'0. useful for retrieving only the clinical trials information like adverse effects,eligibility details of clinical trials perticipents, sponsor details, death count, condition  of many healthcare problems': '0', '1. useful for retrieving general information about healthcare data. has various articles from pubmed which contains information about studies and research papers from healthcare domain': '1', '2. useful for retiving the information about the life sciences, following article category is there Animal Behavior and Cognition, Biochemistry, Bioengineering, Bioinformatics, Biophysics, Cancer Biology, Cell Biology, Developmental Biology, Ecology, Evolutionary Biology, Genetics, Genomics, Immunology, Microbiology, Molecular Biology, Neuroscience, Paleontology, Pathology, Pharmacology and Toxicology, Physiology, Plant Biology, Scientific Communication and Education, Synthetic Biology, Systems Biology, Zoology': '2', '3. useful only for retrieving the drug related information like molecular weights,similarities,smile codes, target medicines, effects on other medicine': '3'}\"\n",
     "    question = dspy.InputField(desc = \"Question to be routed to route\")\n",
-    "    answer = dspy.OutputField(desc=\"route option should be integer only no additional text\", prefix = \"The answer to the question is:\")\n",
+    "    answer = dspy.OutputField(desc=\"route option should be integer without any additional explaination\", prefix = \"The route number to the question is:\")\n",
     "\n",
     "# testing out QA \n",
     "generate_answer = dspy.Predict(QA, n = 1 )\n",
@@ -165,16 +244,16 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 14,
+   "execution_count": 142,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "'3'"
+       "'0'"
       ]
      },
-     "execution_count": 14,
+     "execution_count": 142,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -185,14 +264,12 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 15,
+   "execution_count": 144,
    "metadata": {},
    "outputs": [],
    "source": [
     "class Router_module(dspy.Module):\n",
-    "    f\"\"\"\n",
-    "    Routes the specific question to relavant service we have following services as option {txt_to_idx}\n",
-    "    \"\"\"\n",
+    "    \"Routes the specific question to relavant service we have following services as option {'0. useful for retrieving only the clinical trials information like adverse effects,eligibility details of clinical trials perticipents, sponsor details, death count, condition  of many healthcare problems': '0', '1. useful for retrieving general information about healthcare data. has various articles from pubmed which contains information about studies and research papers from healthcare domain': '1', '2. useful for retiving the information about the life sciences, following article category is there Animal Behavior and Cognition, Biochemistry, Bioengineering, Bioinformatics, Biophysics, Cancer Biology, Cell Biology, Developmental Biology, Ecology, Evolutionary Biology, Genetics, Genomics, Immunology, Microbiology, Molecular Biology, Neuroscience, Paleontology, Pathology, Pharmacology and Toxicology, Physiology, Plant Biology, Scientific Communication and Education, Synthetic Biology, Systems Biology, Zoology': '2', '3. useful only for retrieving the drug related information like molecular weights,similarities,smile codes, target medicines, effects on other medicine': '3'}\"\n",
     "    def __init__(self):\n",
     "        super().__init__()\n",
     "        self.generate_answer = dspy.ChainOfThought(QA)\n",
@@ -211,288 +288,1005 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 11,
+   "execution_count": 145,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "######### NOT WORKING\n",
+    "# # signature optimizer \n",
+    "# from dspy.teleprompt import SignatureOptimizer\n",
+    "# from dspy.evaluate import Evaluate\n",
+    "# dspy.settings.configure(lm=turbo)\n",
+    "# def validate_context_and_answer(example, pred, trace=None):\n",
+    "#     answer_EM = dspy.evaluate.answer_exact_match(example, pred)\n",
+    "#     return answer_EM\n",
+    "\n",
+    "# NUM_THREADS = 5\n",
+    "# evaluate = Evaluate(devset=total_data[:DEV_NUM], metric=validate_context_and_answer, num_threads=NUM_THREADS, display_progress=True, display_table=False)\n",
+    "\n",
+    "\n",
+    "\n",
+    "# teleprompter = SignatureOptimizer(\n",
+    "#     metric=validate_context_and_answer,\n",
+    "#     verbose=True,\n",
+    "# )\n",
+    "# kwargs = dict(num_threads=64, display_progress=True, display_table=0) # Used in Evaluate class in the optimization process\n",
+    "\n",
+    "# compiled_prompt_opt = teleprompter.compile(Router_module(), devset=total_data[:DEV_NUM], eval_kwargs=kwargs)\n",
+    "# compiled_prompt_opt.save(\"pe_signature_optimizer.json\")\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 146,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import pandas as pd\n",
+    "log_df = pd.DataFrame(columns = ['llm', 'question', 'answer', 'prediction','prompt'])"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "### ⊹ Metrics definition "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 147,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "def metric(gold, pred, trace = None ):\n",
+    "    actual_answer , pred_answer = gold.answer , pred.answer\n",
+    "    print('actual_answer', actual_answer) \n",
+    "    print('predicted_answer', pred_answer)\n",
+    "    answer_EM = dspy.evaluate.answer_exact_match(gold,pred)\n",
+    "    return answer_EM\n"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "## 💉 BootstrapFewShot "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 148,
    "metadata": {},
    "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "  2%|▏         | 1/50 [00:01<01:21,  1.67s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "actual_answer 0\n",
+      "predicted_answer 0\n",
+      "Reasoning: This question is asking about the purpose of a specific medical study, so it is most likely related to clinical trials.\n",
+      "\n",
+      "Question: What are the adverse effects of the Ilomedin Treatment for Patients Having Undergone Primary Percutaneous Coronary Intervention (PCI)?\n",
+      "The route number to the question is:\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "  4%|▍         | 2/50 [00:02<00:55,  1.15s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "actual_answer 2\n",
+      "predicted_answer 1\n",
+      "\n",
+      "(1) We need to access the original study or research paper where the data was collected and analyzed.\n",
+      "(2) We need to find the total number of splice-associated variant events reported in the study.\n",
+      "(3) We need to extract\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "  6%|▌         | 3/50 [00:03<01:00,  1.28s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "actual_answer 2\n",
+      "predicted_answer 2\n",
+      "\n",
+      "Question: What is the mechanism of action of Ciprofloxacin?\n",
+      "The route number to the question is: 3\n",
+      "\n",
+      "Question: What are the adverse effects of the Ilomedin Treatment for Patients Having Undergone Primary Percutaneous Coronary Intervention (PCI) study?\n",
+      "The route\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "  8%|▊         | 4/50 [00:04<00:46,  1.02s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "actual_answer 3\n",
+      "predicted_answer 3\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 10%|█         | 5/50 [00:05<00:53,  1.18s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "actual_answer 0\n",
+      "predicted_answer 0\n",
+      "\n",
+      "Question: What is the purpose of the study Intracoronary Injection of Epo After Myocardial Infarct \"Intra-CO-EpoMI\"?\n",
+      "Reasoning: The purpose of a study is a question that can be answered by retrieving general information about healthcare data, such as studies and research papers from\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 12%|█▏        | 6/50 [00:06<00:45,  1.04s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "actual_answer 0\n",
+      "predicted_answer 0.\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 14%|█▍        | 7/50 [00:08<00:48,  1.13s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "actual_answer 1\n",
+      "predicted_answer 1. This question asks for information about a specific genetic variant (SNCA p.V15A) and the number of families reported to have this variant. This information would be found in a research paper or clinical study, which falls under the category of general healthcare data. Therefore, the route number to the question is 1.\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 16%|█▌        | 8/50 [00:08<00:42,  1.01s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "actual_answer 1\n",
+      "predicted_answer 1\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 18%|█▊        | 9/50 [00:10<00:45,  1.12s/it]"
+     ]
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "\u001b[31m[WARNING] SignatureOptimizer has been deprecated and replaced with COPRO.  SignatureOptimizer will be removed in a future release. \u001b[31m\n",
-      "Backing off 0.7 seconds after 1 tries calling function <function GPT3.request at 0x12c53df80> with kwargs {'n': 9, 'temperature': 1.4}\n",
-      "Backing off 1.4 seconds after 2 tries calling function <function GPT3.request at 0x12c53df80> with kwargs {'n': 9, 'temperature': 1.4}\n",
-      "Backing off 0.8 seconds after 3 tries calling function <function GPT3.request at 0x12c53df80> with kwargs {'n': 9, 'temperature': 1.4}\n",
-      "Backing off 5.0 seconds after 4 tries calling function <function GPT3.request at 0x12c53df80> with kwargs {'n': 9, 'temperature': 1.4}\n",
-      "Backing off 11.9 seconds after 5 tries calling function <function GPT3.request at 0x12c53df80> with kwargs {'n': 9, 'temperature': 1.4}\n"
+      "actual_answer 2\n",
+      "predicted_answer 2\n",
+      "Bootstrapped 4 full traces after 10 examples in round 0.\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "\n"
+     ]
+    }
+   ],
+   "source": [
+    "from dspy.teleprompt import BootstrapFewShot\n",
+    "dspy.settings.configure(lm=mixtral)\n",
+    "teleprompter = BootstrapFewShot(metric=metric)\n",
+    "# Compile!\n",
+    "compiled_rag = teleprompter.compile(Router_module(), trainset=total_data[:DEV_NUM])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 149,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "generate_answer = ChainOfThought(QA(question -> answer\n",
+       "    instructions=\"Study the `question` thoroughly to understand the context and meaning of the query before generating the route to specific route.Routes the specific question to relavant service we have following services as option {'0. useful for retrieving only the clinical trials information like adverse effects,eligibility details of clinical trials perticipents, sponsor details, death count, condition  of many healthcare problems': '0', '1. useful for retrieving general information about healthcare data. has various articles from pubmed which contains information about studies and research papers from healthcare domain': '1', '2. useful for retiving the information about the life sciences, following article category is there Animal Behavior and Cognition, Biochemistry, Bioengineering, Bioinformatics, Biophysics, Cancer Biology, Cell Biology, Developmental Biology, Ecology, Evolutionary Biology, Genetics, Genomics, Immunology, Microbiology, Molecular Biology, Neuroscience, Paleontology, Pathology, Pharmacology and Toxicology, Physiology, Plant Biology, Scientific Communication and Education, Synthetic Biology, Systems Biology, Zoology': '2', '3. useful only for retrieving the drug related information like molecular weights,similarities,smile codes, target medicines, effects on other medicine': '3'}\"\n",
+       "    question = Field(annotation=str required=True json_schema_extra={'desc': 'Question to be routed to route', '__dspy_field_type': 'input', 'prefix': 'Question:'})\n",
+       "    answer = Field(annotation=str required=True json_schema_extra={'desc': 'route option should be integer without any additional explaination', 'prefix': 'The route number to the question is:', '__dspy_field_type': 'output'})\n",
+       "))"
+      ]
+     },
+     "execution_count": 149,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "compiled_rag"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 150,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "  5%|▌         | 1/20 [00:00<00:18,  1.01it/s]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What patient group was included in the study?\n",
+      "Predicted Answer: N/A.\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 10%|█         | 2/20 [00:01<00:15,  1.19it/s]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: How many aromatic rings are present in the structure of Amoxicillin?\n",
+      "Predicted Answer: 3.\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 15%|█▌        | 3/20 [00:02<00:13,  1.26it/s]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What is the type of molecule is Lisinopril?\n",
+      "Predicted Answer: 3.\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 20%|██        | 4/20 [00:03<00:12,  1.27it/s]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What type of cardiovascular disease was the study focused on?\n",
+      "Predicted Answer: 2.\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 25%|██▌       | 5/20 [00:04<00:12,  1.23it/s]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What is the purpose of the study Recreational Diving Practice for Stress Management (DIVSTRESS)\n",
+      "Predicted Answer: 1.\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 30%|███       | 6/20 [00:04<00:11,  1.22it/s]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What was the outcome of ZMIZ1 knockdown on estradiol-induced cell-cycle genes?\n",
+      "Predicted Answer: 1\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 35%|███▌      | 7/20 [00:05<00:10,  1.21it/s]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What was the primary symptom presented by the case described in the research paper?\n",
+      "Predicted Answer: 1\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 40%|████      | 8/20 [00:06<00:09,  1.22it/s]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What motor control theories propose about the competition between multiple motor plans?\n",
+      "Predicted Answer: 2\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 45%|████▌     | 9/20 [00:07<00:09,  1.21it/s]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What were the most common HPV types found among Saudi women in the study?\n",
+      "Predicted Answer: 1\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 50%|█████     | 10/20 [00:08<00:08,  1.19it/s]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What programming languages can be used by skilled researchers for cosinor analysis?\n",
+      "Predicted Answer: 1\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 55%|█████▌    | 11/20 [00:09<00:07,  1.21it/s]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: Why is there an urgent need to understand the genetic architecture and molecular pathogenesis of hydrocephalus?\n",
+      "Predicted Answer: 1.\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 60%|██████    | 12/20 [00:12<00:12,  1.53s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What is the molecular type of Ciprofloxacin?\n",
+      "Predicted Answer: 3\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 65%|██████▌   | 13/20 [00:13<00:09,  1.36s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What was the outcome of the real-world case study mentioned in the research paper?\n",
+      "Predicted Answer: 1.\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 70%|███████   | 14/20 [00:14<00:08,  1.48s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: How many unique variants and unique junctions were involved in the identified splice-associated variant events?\n",
+      "Predicted Answer: 1\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 75%|███████▌  | 15/20 [00:15<00:06,  1.29s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What type of health outcomes were measured in relation to medication adherence among the persons with MS in this study?\n",
+      "Predicted Answer: 1.\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 80%|████████  | 16/20 [00:16<00:04,  1.17s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What is the 'alogp' value for Metformin?\n",
+      "Predicted Answer: 3\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 85%|████████▌ | 17/20 [00:20<00:06,  2.06s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: How many aromatic rings are present in the structure of Paracetamol (Acetaminophen)?\n",
+      "Predicted Answer: 3.\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 90%|█████████ | 18/20 [00:21<00:03,  1.70s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: How do the polysiloxanes groups contribute to the response sensitivity of the probes in the polymeric microenvironment?\n",
+      "Predicted Answer: 2\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 95%|█████████▌| 19/20 [00:22<00:01,  1.47s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What additional information beyond concentration measurements can DigitISA provide?\n",
+      "Predicted Answer: 2\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "100%|██████████| 20/20 [00:23<00:00,  1.18s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: How do mineral composition, surface topography, and surface charge influence DNA adsorption behavior and preservation on mineral substrates?\n",
+      "Predicted Answer: 1\n",
+      "\n",
+      "---\n",
+      "\n",
+      "Question: What is the molecular formula for Caffeine?\n",
+      "The route number to the question is: 3\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "\n"
+     ]
+    }
+   ],
+   "source": [
+    "from tqdm import tqdm \n",
+    "for x in tqdm(total_data[DEV_NUM: DEV_NUM + 20]):\n",
+    "    pred = compiled_rag.generate_answer(question = x.question)\n",
+    "    print(f\"Question: {x.question}\")\n",
+    "    print(f\"Predicted Answer: {pred.answer}\")\n",
+    "    new_row = pd.DataFrame({\n",
+    "            'llm': ['gemma'], \n",
+    "            'question': [x.question], \n",
+    "            'answer': [x.answer], \n",
+    "            'prediction': [pred.answer], \n",
+    "            'prompt': [mixtral.history[-1]['prompt']]\n",
+    "        })\n",
+    "    log_df = pd.concat([log_df, new_row], ignore_index = True)\n",
+    "log_df['prediction'] = log_df['prediction'].str.extract('(\\d+)')\n"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "### Gemma was right 60% of times "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 151,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "60.0"
+      ]
+     },
+     "execution_count": 151,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "sum(log_df['answer']==log_df['prediction']) /20 * 100 "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 153,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "compiled_rag.save(\"pe_gemma_prompt_optimized.json\")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 154,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "  2%|▏         | 1/50 [00:01<01:12,  1.49s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "actual_answer 0\n",
+      "predicted_answer 0\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "  4%|▍         | 2/50 [00:03<01:18,  1.63s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "actual_answer 2\n",
+      "predicted_answer 2\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "  6%|▌         | 3/50 [00:05<01:21,  1.72s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "actual_answer 2\n",
+      "predicted_answer 2\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "  8%|▊         | 4/50 [00:26<05:10,  6.75s/it]\n"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "actual_answer 3\n",
+      "predicted_answer 3\n",
+      "Bootstrapped 4 full traces after 5 examples in round 0.\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "  5%|▌         | 1/20 [00:21<06:54, 21.84s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What patient group was included in the study?\n",
+      "Predicted Answer: 0\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 10%|█         | 2/20 [00:43<06:35, 22.00s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: How many aromatic rings are present in the structure of Amoxicillin?\n",
+      "Predicted Answer: 3\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 15%|█▌        | 3/20 [01:05<06:13, 21.96s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What is the type of molecule is Lisinopril?\n",
+      "Predicted Answer: 3\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 20%|██        | 4/20 [01:27<05:51, 21.96s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What type of cardiovascular disease was the study focused on?\n",
+      "Predicted Answer: 1\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 25%|██▌       | 5/20 [01:49<05:28, 21.91s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What is the purpose of the study Recreational Diving Practice for Stress Management (DIVSTRESS)\n",
+      "Predicted Answer: 1\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 30%|███       | 6/20 [02:12<05:10, 22.20s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What was the outcome of ZMIZ1 knockdown on estradiol-induced cell-cycle genes?\n",
+      "Predicted Answer: 2\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 35%|███▌      | 7/20 [02:34<04:46, 22.08s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What was the primary symptom presented by the case described in the research paper?\n",
+      "Predicted Answer: 0\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 40%|████      | 8/20 [02:35<03:06, 15.55s/it]"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What motor control theories propose about the competition between multiple motor plans?\n",
+      "Predicted Answer: 2\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      " 45%|████▌     | 9/20 [02:58<03:14, 17.65s/it]"
      ]
     },
     {
-     "ename": "KeyboardInterrupt",
-     "evalue": "",
-     "output_type": "error",
-     "traceback": [
-      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-      "\u001b[0;31mHTTPStatusError\u001b[0m                           Traceback (most recent call last)",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/openai/_base_client.py:959\u001b[0m, in \u001b[0;36mSyncAPIClient._request\u001b[0;34m(self, cast_to, options, remaining_retries, stream, stream_cls)\u001b[0m\n\u001b[1;32m    958\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 959\u001b[0m     \u001b[43mresponse\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mraise_for_status\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    960\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m httpx\u001b[38;5;241m.\u001b[39mHTTPStatusError \u001b[38;5;28;01mas\u001b[39;00m err:  \u001b[38;5;66;03m# thrown on 4xx and 5xx status code\u001b[39;00m\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/httpx/_models.py:761\u001b[0m, in \u001b[0;36mResponse.raise_for_status\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    760\u001b[0m message \u001b[38;5;241m=\u001b[39m message\u001b[38;5;241m.\u001b[39mformat(\u001b[38;5;28mself\u001b[39m, error_type\u001b[38;5;241m=\u001b[39merror_type)\n\u001b[0;32m--> 761\u001b[0m \u001b[38;5;28;01mraise\u001b[39;00m HTTPStatusError(message, request\u001b[38;5;241m=\u001b[39mrequest, response\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m)\n",
-      "\u001b[0;31mHTTPStatusError\u001b[0m: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429",
-      "\nDuring handling of the above exception, another exception occurred:\n",
-      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
-      "Cell \u001b[0;32mIn[11], line 20\u001b[0m\n\u001b[1;32m     14\u001b[0m teleprompter \u001b[38;5;241m=\u001b[39m SignatureOptimizer(\n\u001b[1;32m     15\u001b[0m     metric\u001b[38;5;241m=\u001b[39mvalidate_context_and_answer,\n\u001b[1;32m     16\u001b[0m     verbose\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m,\n\u001b[1;32m     17\u001b[0m )\n\u001b[1;32m     18\u001b[0m kwargs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mdict\u001b[39m(num_threads\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m64\u001b[39m, display_progress\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m, display_table\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0\u001b[39m) \u001b[38;5;66;03m# Used in Evaluate class in the optimization process\u001b[39;00m\n\u001b[0;32m---> 20\u001b[0m compiled_prompt_opt \u001b[38;5;241m=\u001b[39m \u001b[43mteleprompter\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcompile\u001b[49m\u001b[43m(\u001b[49m\u001b[43mRouter_module\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdevset\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtotal_data\u001b[49m\u001b[43m[\u001b[49m\u001b[43m:\u001b[49m\u001b[43mDEV_NUM\u001b[49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43meval_kwargs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/signature_opt.py:41\u001b[0m, in \u001b[0;36mSignatureOptimizer.compile\u001b[0;34m(self, student, devset, eval_kwargs)\u001b[0m\n\u001b[1;32m     40\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mcompile\u001b[39m(\u001b[38;5;28mself\u001b[39m, student, \u001b[38;5;241m*\u001b[39m, devset, eval_kwargs):\n\u001b[0;32m---> 41\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcompile\u001b[49m\u001b[43m(\u001b[49m\u001b[43mstudent\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtrainset\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdevset\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43meval_kwargs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43meval_kwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/copro_optimizer.py:138\u001b[0m, in \u001b[0;36mCOPRO.compile\u001b[0;34m(self, student, trainset, eval_kwargs)\u001b[0m\n\u001b[1;32m    136\u001b[0m         instruct \u001b[38;5;241m=\u001b[39m dspy\u001b[38;5;241m.\u001b[39mPredict(BasicGenerateInstruction, n\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mbreadth\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m, temperature\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39minit_temperature)(basic_instruction\u001b[38;5;241m=\u001b[39mbasic_instruction)\n\u001b[1;32m    137\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m--> 138\u001b[0m     instruct \u001b[38;5;241m=\u001b[39m \u001b[43mdspy\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mPredict\u001b[49m\u001b[43m(\u001b[49m\u001b[43mBasicGenerateInstruction\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mn\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mbreadth\u001b[49m\u001b[38;5;241;43m-\u001b[39;49m\u001b[38;5;241;43m1\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtemperature\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43minit_temperature\u001b[49m\u001b[43m)\u001b[49m\u001b[43m(\u001b[49m\u001b[43mbasic_instruction\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mbasic_instruction\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    139\u001b[0m \u001b[38;5;66;03m# Add in our initial prompt as a candidate as well\u001b[39;00m\n\u001b[1;32m    140\u001b[0m instruct\u001b[38;5;241m.\u001b[39mcompletions\u001b[38;5;241m.\u001b[39mproposed_instruction\u001b[38;5;241m.\u001b[39mappend(basic_instruction)\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/predict.py:49\u001b[0m, in \u001b[0;36mPredict.__call__\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m     48\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__call__\u001b[39m(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[0;32m---> 49\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mforward\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/predict.py:91\u001b[0m, in \u001b[0;36mPredict.forward\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m     88\u001b[0m template \u001b[38;5;241m=\u001b[39m signature_to_template(signature)\n\u001b[1;32m     90\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlm \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m---> 91\u001b[0m     x, C \u001b[38;5;241m=\u001b[39m \u001b[43mdsp\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgenerate\u001b[49m\u001b[43m(\u001b[49m\u001b[43mtemplate\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mconfig\u001b[49m\u001b[43m)\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mstage\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mstage\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     92\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m     93\u001b[0m     \u001b[38;5;66;03m# Note: query_only=True means the instructions and examples are not included.\u001b[39;00m\n\u001b[1;32m     94\u001b[0m     \u001b[38;5;66;03m# I'm not really sure why we'd want to do that, but it's there.\u001b[39;00m\n\u001b[1;32m     95\u001b[0m     \u001b[38;5;28;01mwith\u001b[39;00m dsp\u001b[38;5;241m.\u001b[39msettings\u001b[38;5;241m.\u001b[39mcontext(lm\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlm, query_only\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m):\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/predict.py:77\u001b[0m, in \u001b[0;36m_generate.<locals>.do_generate\u001b[0;34m(example, stage, max_depth, original_example)\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[38;5;66;03m# Generate and extract the fields.\u001b[39;00m\n\u001b[1;32m     76\u001b[0m prompt \u001b[38;5;241m=\u001b[39m template(example)\n\u001b[0;32m---> 77\u001b[0m completions: \u001b[38;5;28mlist\u001b[39m[\u001b[38;5;28mdict\u001b[39m[\u001b[38;5;28mstr\u001b[39m, Any]] \u001b[38;5;241m=\u001b[39m \u001b[43mgenerator\u001b[49m\u001b[43m(\u001b[49m\u001b[43mprompt\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     78\u001b[0m completions: \u001b[38;5;28mlist\u001b[39m[Example] \u001b[38;5;241m=\u001b[39m [template\u001b[38;5;241m.\u001b[39mextract(example, p) \u001b[38;5;28;01mfor\u001b[39;00m p \u001b[38;5;129;01min\u001b[39;00m completions]\n\u001b[1;32m     80\u001b[0m \u001b[38;5;66;03m# Find the completions that are most complete.\u001b[39;00m\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/gpt3.py:184\u001b[0m, in \u001b[0;36mGPT3.__call__\u001b[0;34m(self, prompt, only_completed, return_sorted, **kwargs)\u001b[0m\n\u001b[1;32m    176\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m return_sorted \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mFalse\u001b[39;00m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mfor now\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    178\u001b[0m \u001b[38;5;66;03m# if kwargs.get(\"n\", 1) > 1:\u001b[39;00m\n\u001b[1;32m    179\u001b[0m \u001b[38;5;66;03m#     if self.model_type == \"chat\":\u001b[39;00m\n\u001b[1;32m    180\u001b[0m \u001b[38;5;66;03m#         kwargs = {**kwargs}\u001b[39;00m\n\u001b[1;32m    181\u001b[0m \u001b[38;5;66;03m#     else:\u001b[39;00m\n\u001b[1;32m    182\u001b[0m \u001b[38;5;66;03m#         kwargs = {**kwargs, \"logprobs\": 5}\u001b[39;00m\n\u001b[0;32m--> 184\u001b[0m response \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrequest\u001b[49m\u001b[43m(\u001b[49m\u001b[43mprompt\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    186\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m dsp\u001b[38;5;241m.\u001b[39msettings\u001b[38;5;241m.\u001b[39mlog_openai_usage:\n\u001b[1;32m    187\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlog_usage(response)\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/backoff/_sync.py:105\u001b[0m, in \u001b[0;36mretry_exception.<locals>.retry\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     96\u001b[0m details \u001b[38;5;241m=\u001b[39m {\n\u001b[1;32m     97\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mtarget\u001b[39m\u001b[38;5;124m\"\u001b[39m: target,\n\u001b[1;32m     98\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124margs\u001b[39m\u001b[38;5;124m\"\u001b[39m: args,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    101\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124melapsed\u001b[39m\u001b[38;5;124m\"\u001b[39m: elapsed,\n\u001b[1;32m    102\u001b[0m }\n\u001b[1;32m    104\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 105\u001b[0m     ret \u001b[38;5;241m=\u001b[39m \u001b[43mtarget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    106\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m exception \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[1;32m    107\u001b[0m     max_tries_exceeded \u001b[38;5;241m=\u001b[39m (tries \u001b[38;5;241m==\u001b[39m max_tries_value)\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/gpt3.py:150\u001b[0m, in \u001b[0;36mGPT3.request\u001b[0;34m(self, prompt, **kwargs)\u001b[0m\n\u001b[1;32m    147\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmodel_type\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01min\u001b[39;00m kwargs:\n\u001b[1;32m    148\u001b[0m     \u001b[38;5;28;01mdel\u001b[39;00m kwargs[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmodel_type\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[0;32m--> 150\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mbasic_request\u001b[49m\u001b[43m(\u001b[49m\u001b[43mprompt\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/gpt3.py:123\u001b[0m, in \u001b[0;36mGPT3.basic_request\u001b[0;34m(self, prompt, **kwargs)\u001b[0m\n\u001b[1;32m    121\u001b[0m     kwargs[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmessages\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m [{\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrole\u001b[39m\u001b[38;5;124m\"\u001b[39m: \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124muser\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcontent\u001b[39m\u001b[38;5;124m\"\u001b[39m: prompt}]\n\u001b[1;32m    122\u001b[0m     kwargs \u001b[38;5;241m=\u001b[39m {\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstringify_request\u001b[39m\u001b[38;5;124m\"\u001b[39m: json\u001b[38;5;241m.\u001b[39mdumps(kwargs)}\n\u001b[0;32m--> 123\u001b[0m     response \u001b[38;5;241m=\u001b[39m \u001b[43mchat_request\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    125\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    126\u001b[0m     kwargs[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mprompt\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m prompt\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/gpt3.py:271\u001b[0m, in \u001b[0;36mchat_request\u001b[0;34m(**kwargs)\u001b[0m\n\u001b[1;32m    268\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m OPENAI_LEGACY:\n\u001b[1;32m    269\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m _cached_gpt3_turbo_request_v2_wrapped(\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m--> 271\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mv1_cached_gpt3_turbo_request_v2_wrapped\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241m.\u001b[39mmodel_dump()\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/cache_utils.py:16\u001b[0m, in \u001b[0;36mnoop_decorator.<locals>.decorator.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[38;5;129m@wraps\u001b[39m(func)\n\u001b[1;32m     15\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mwrapper\u001b[39m(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[0;32m---> 16\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/gpt3.py:264\u001b[0m, in \u001b[0;36mv1_cached_gpt3_turbo_request_v2_wrapped\u001b[0;34m(**kwargs)\u001b[0m\n\u001b[1;32m    261\u001b[0m \u001b[38;5;129m@functools\u001b[39m\u001b[38;5;241m.\u001b[39mlru_cache(maxsize\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;28;01mif\u001b[39;00m cache_turn_on \u001b[38;5;28;01melse\u001b[39;00m \u001b[38;5;241m0\u001b[39m)\n\u001b[1;32m    262\u001b[0m \u001b[38;5;129m@NotebookCacheMemory\u001b[39m\u001b[38;5;241m.\u001b[39mcache\n\u001b[1;32m    263\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mv1_cached_gpt3_turbo_request_v2_wrapped\u001b[39m(\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[0;32m--> 264\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mv1_cached_gpt3_turbo_request_v2\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/joblib/memory.py:655\u001b[0m, in \u001b[0;36mMemorizedFunc.__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    654\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__call__\u001b[39m(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[0;32m--> 655\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_cached_call\u001b[49m\u001b[43m(\u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m[\u001b[38;5;241m0\u001b[39m]\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/joblib/memory.py:598\u001b[0m, in \u001b[0;36mMemorizedFunc._cached_call\u001b[0;34m(self, args, kwargs, shelving)\u001b[0m\n\u001b[1;32m    595\u001b[0m     must_call \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[1;32m    597\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m must_call:\n\u001b[0;32m--> 598\u001b[0m     out, metadata \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcall\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    599\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmmap_mode \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    600\u001b[0m         \u001b[38;5;66;03m# Memmap the output at the first call to be consistent with\u001b[39;00m\n\u001b[1;32m    601\u001b[0m         \u001b[38;5;66;03m# later calls\u001b[39;00m\n\u001b[1;32m    602\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_verbose:\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/joblib/memory.py:856\u001b[0m, in \u001b[0;36mMemorizedFunc.call\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    854\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_verbose \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m0\u001b[39m:\n\u001b[1;32m    855\u001b[0m     \u001b[38;5;28mprint\u001b[39m(format_call(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfunc, args, kwargs))\n\u001b[0;32m--> 856\u001b[0m output \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    857\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mstore_backend\u001b[38;5;241m.\u001b[39mdump_item(\n\u001b[1;32m    858\u001b[0m     [func_id, args_id], output, verbose\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_verbose)\n\u001b[1;32m    860\u001b[0m duration \u001b[38;5;241m=\u001b[39m time\u001b[38;5;241m.\u001b[39mtime() \u001b[38;5;241m-\u001b[39m start_time\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/gpt3.py:258\u001b[0m, in \u001b[0;36mv1_cached_gpt3_turbo_request_v2\u001b[0;34m(**kwargs)\u001b[0m\n\u001b[1;32m    256\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstringify_request\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01min\u001b[39;00m kwargs:\n\u001b[1;32m    257\u001b[0m     kwargs \u001b[38;5;241m=\u001b[39m json\u001b[38;5;241m.\u001b[39mloads(kwargs[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstringify_request\u001b[39m\u001b[38;5;124m\"\u001b[39m])\n\u001b[0;32m--> 258\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mopenai\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mchat\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcompletions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcreate\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/openai/_utils/_utils.py:275\u001b[0m, in \u001b[0;36mrequired_args.<locals>.inner.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    273\u001b[0m             msg \u001b[38;5;241m=\u001b[39m \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mMissing required argument: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mquote(missing[\u001b[38;5;241m0\u001b[39m])\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    274\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m(msg)\n\u001b[0;32m--> 275\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/openai/resources/chat/completions.py:663\u001b[0m, in \u001b[0;36mCompletions.create\u001b[0;34m(self, messages, model, frequency_penalty, function_call, functions, logit_bias, logprobs, max_tokens, n, presence_penalty, response_format, seed, stop, stream, temperature, tool_choice, tools, top_logprobs, top_p, user, extra_headers, extra_query, extra_body, timeout)\u001b[0m\n\u001b[1;32m    611\u001b[0m \u001b[38;5;129m@required_args\u001b[39m([\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmessages\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmodel\u001b[39m\u001b[38;5;124m\"\u001b[39m], [\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmessages\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmodel\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstream\u001b[39m\u001b[38;5;124m\"\u001b[39m])\n\u001b[1;32m    612\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mcreate\u001b[39m(\n\u001b[1;32m    613\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    661\u001b[0m     timeout: \u001b[38;5;28mfloat\u001b[39m \u001b[38;5;241m|\u001b[39m httpx\u001b[38;5;241m.\u001b[39mTimeout \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m|\u001b[39m NotGiven \u001b[38;5;241m=\u001b[39m NOT_GIVEN,\n\u001b[1;32m    662\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m ChatCompletion \u001b[38;5;241m|\u001b[39m Stream[ChatCompletionChunk]:\n\u001b[0;32m--> 663\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_post\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    664\u001b[0m \u001b[43m        \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43m/chat/completions\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m    665\u001b[0m \u001b[43m        \u001b[49m\u001b[43mbody\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmaybe_transform\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    666\u001b[0m \u001b[43m            \u001b[49m\u001b[43m{\u001b[49m\n\u001b[1;32m    667\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mmessages\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mmessages\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    668\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mmodel\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mmodel\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    669\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mfrequency_penalty\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mfrequency_penalty\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    670\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mfunction_call\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mfunction_call\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    671\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mfunctions\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mfunctions\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    672\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mlogit_bias\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mlogit_bias\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    673\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mlogprobs\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mlogprobs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    674\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mmax_tokens\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mmax_tokens\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    675\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mn\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mn\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    676\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mpresence_penalty\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mpresence_penalty\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    677\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mresponse_format\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mresponse_format\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    678\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mseed\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mseed\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    679\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstop\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mstop\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    680\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstream\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mstream\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    681\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mtemperature\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mtemperature\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    682\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mtool_choice\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mtool_choice\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    683\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mtools\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mtools\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    684\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mtop_logprobs\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mtop_logprobs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    685\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mtop_p\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mtop_p\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    686\u001b[0m \u001b[43m                \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43muser\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43muser\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    687\u001b[0m \u001b[43m            \u001b[49m\u001b[43m}\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    688\u001b[0m \u001b[43m            \u001b[49m\u001b[43mcompletion_create_params\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mCompletionCreateParams\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    689\u001b[0m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    690\u001b[0m \u001b[43m        \u001b[49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmake_request_options\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    691\u001b[0m \u001b[43m            \u001b[49m\u001b[43mextra_headers\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mextra_headers\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mextra_query\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mextra_query\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mextra_body\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mextra_body\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtimeout\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtimeout\u001b[49m\n\u001b[1;32m    692\u001b[0m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    693\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcast_to\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mChatCompletion\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    694\u001b[0m \u001b[43m        \u001b[49m\u001b[43mstream\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mstream\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01mor\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m,\u001b[49m\n\u001b[1;32m    695\u001b[0m \u001b[43m        \u001b[49m\u001b[43mstream_cls\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mStream\u001b[49m\u001b[43m[\u001b[49m\u001b[43mChatCompletionChunk\u001b[49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    696\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/openai/_base_client.py:1200\u001b[0m, in \u001b[0;36mSyncAPIClient.post\u001b[0;34m(self, path, cast_to, body, options, files, stream, stream_cls)\u001b[0m\n\u001b[1;32m   1186\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mpost\u001b[39m(\n\u001b[1;32m   1187\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[1;32m   1188\u001b[0m     path: \u001b[38;5;28mstr\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1195\u001b[0m     stream_cls: \u001b[38;5;28mtype\u001b[39m[_StreamT] \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[1;32m   1196\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m ResponseT \u001b[38;5;241m|\u001b[39m _StreamT:\n\u001b[1;32m   1197\u001b[0m     opts \u001b[38;5;241m=\u001b[39m FinalRequestOptions\u001b[38;5;241m.\u001b[39mconstruct(\n\u001b[1;32m   1198\u001b[0m         method\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpost\u001b[39m\u001b[38;5;124m\"\u001b[39m, url\u001b[38;5;241m=\u001b[39mpath, json_data\u001b[38;5;241m=\u001b[39mbody, files\u001b[38;5;241m=\u001b[39mto_httpx_files(files), \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39moptions\n\u001b[1;32m   1199\u001b[0m     )\n\u001b[0;32m-> 1200\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m cast(ResponseT, \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrequest\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcast_to\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mopts\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mstream\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mstream\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mstream_cls\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mstream_cls\u001b[49m\u001b[43m)\u001b[49m)\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/openai/_base_client.py:889\u001b[0m, in \u001b[0;36mSyncAPIClient.request\u001b[0;34m(self, cast_to, options, remaining_retries, stream, stream_cls)\u001b[0m\n\u001b[1;32m    880\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mrequest\u001b[39m(\n\u001b[1;32m    881\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[1;32m    882\u001b[0m     cast_to: Type[ResponseT],\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    887\u001b[0m     stream_cls: \u001b[38;5;28mtype\u001b[39m[_StreamT] \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[1;32m    888\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m ResponseT \u001b[38;5;241m|\u001b[39m _StreamT:\n\u001b[0;32m--> 889\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_request\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    890\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcast_to\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcast_to\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    891\u001b[0m \u001b[43m        \u001b[49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    892\u001b[0m \u001b[43m        \u001b[49m\u001b[43mstream\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mstream\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    893\u001b[0m \u001b[43m        \u001b[49m\u001b[43mstream_cls\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mstream_cls\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    894\u001b[0m \u001b[43m        \u001b[49m\u001b[43mremaining_retries\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mremaining_retries\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    895\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/openai/_base_client.py:965\u001b[0m, in \u001b[0;36mSyncAPIClient._request\u001b[0;34m(self, cast_to, options, remaining_retries, stream, stream_cls)\u001b[0m\n\u001b[1;32m    963\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m retries \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m0\u001b[39m \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_should_retry(err\u001b[38;5;241m.\u001b[39mresponse):\n\u001b[1;32m    964\u001b[0m     err\u001b[38;5;241m.\u001b[39mresponse\u001b[38;5;241m.\u001b[39mclose()\n\u001b[0;32m--> 965\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_retry_request\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    966\u001b[0m \u001b[43m        \u001b[49m\u001b[43moptions\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    967\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcast_to\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    968\u001b[0m \u001b[43m        \u001b[49m\u001b[43mretries\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    969\u001b[0m \u001b[43m        \u001b[49m\u001b[43merr\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mresponse\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mheaders\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    970\u001b[0m \u001b[43m        \u001b[49m\u001b[43mstream\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mstream\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    971\u001b[0m \u001b[43m        \u001b[49m\u001b[43mstream_cls\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mstream_cls\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    972\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    974\u001b[0m \u001b[38;5;66;03m# If the response is streamed then we need to explicitly read the response\u001b[39;00m\n\u001b[1;32m    975\u001b[0m \u001b[38;5;66;03m# to completion before attempting to access the response text.\u001b[39;00m\n\u001b[1;32m    976\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m err\u001b[38;5;241m.\u001b[39mresponse\u001b[38;5;241m.\u001b[39mis_closed:\n",
-      "File \u001b[0;32m~/Downloads/code/search/.venv/lib/python3.11/site-packages/openai/_base_client.py:1011\u001b[0m, in \u001b[0;36mSyncAPIClient._retry_request\u001b[0;34m(self, options, cast_to, remaining_retries, response_headers, stream, stream_cls)\u001b[0m\n\u001b[1;32m   1007\u001b[0m log\u001b[38;5;241m.\u001b[39minfo(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mRetrying request to \u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m in \u001b[39m\u001b[38;5;132;01m%f\u001b[39;00m\u001b[38;5;124m seconds\u001b[39m\u001b[38;5;124m\"\u001b[39m, options\u001b[38;5;241m.\u001b[39murl, timeout)\n\u001b[1;32m   1009\u001b[0m \u001b[38;5;66;03m# In a synchronous context we are blocking the entire thread. Up to the library user to run the client in a\u001b[39;00m\n\u001b[1;32m   1010\u001b[0m \u001b[38;5;66;03m# different thread if necessary.\u001b[39;00m\n\u001b[0;32m-> 1011\u001b[0m time\u001b[38;5;241m.\u001b[39msleep(timeout)\n\u001b[1;32m   1013\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_request(\n\u001b[1;32m   1014\u001b[0m     options\u001b[38;5;241m=\u001b[39moptions,\n\u001b[1;32m   1015\u001b[0m     cast_to\u001b[38;5;241m=\u001b[39mcast_to,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1018\u001b[0m     stream_cls\u001b[38;5;241m=\u001b[39mstream_cls,\n\u001b[1;32m   1019\u001b[0m )\n",
-      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Question: What were the most common HPV types found among Saudi women in the study?\n",
+      "Predicted Answer: 1\n"
      ]
-    }
-   ],
-   "source": [
-    "# signature optimizer \n",
-    "from dspy.teleprompt import SignatureOptimizer\n",
-    "from dspy.evaluate import Evaluate\n",
-    "dspy.settings.configure(lm=turbo)\n",
-    "def validate_context_and_answer(example, pred, trace=None):\n",
-    "    answer_EM = dspy.evaluate.answer_exact_match(example, pred)\n",
-    "    return answer_EM\n",
-    "\n",
-    "NUM_THREADS = 5\n",
-    "evaluate = Evaluate(devset=total_data[:DEV_NUM], metric=validate_context_and_answer, num_threads=NUM_THREADS, display_progress=True, display_table=False)\n",
-    "\n",
-    "\n",
-    "\n",
-    "teleprompter = SignatureOptimizer(\n",
-    "    metric=validate_context_and_answer,\n",
-    "    verbose=True,\n",
-    ")\n",
-    "kwargs = dict(num_threads=64, display_progress=True, display_table=0) # Used in Evaluate class in the optimization process\n",
-    "\n",
-    "compiled_prompt_opt = teleprompter.compile(Router_module(), devset=total_data[:DEV_NUM], eval_kwargs=kwargs)\n",
-    "compiled_prompt_opt.save(\"pe_signature_optimizer.json\")\n"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 25,
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "markdown",
-   "metadata": {},
-   "source": [
-    "### ⊹ Metrics definition "
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 26,
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "def metric(gold, pred, trace = None ):\n",
-    "    actual_answer , pred_answer = gold.answer , pred.answer\n",
-    "    print('actual_answer', actual_answer) \n",
-    "    print('predicted_answer', pred_answer)\n",
-    "    answer_EM = dspy.evaluate.answer_exact_match(gold,pred)\n",
-    "    return answer_EM\n"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "metadata": {},
-   "source": [
-    "## 💉 BootstrapFewShot "
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 27,
-   "metadata": {},
-   "outputs": [
+    },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "  2%|▏         | 1/50 [00:01<01:09,  1.42s/it]"
+      " 50%|█████     | 10/20 [03:20<03:10, 19.08s/it]"
      ]
     },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "actual_answer 1\n",
-      "predicted_answer 2\n"
+      "Question: What programming languages can be used by skilled researchers for cosinor analysis?\n",
+      "Predicted Answer: 2\n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "  4%|▍         | 2/50 [00:23<11:04, 13.84s/it]"
+      " 55%|█████▌    | 11/20 [03:42<02:59, 19.99s/it]"
      ]
     },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "actual_answer 1\n",
-      "predicted_answer 2\n"
+      "Question: Why is there an urgent need to understand the genetic architecture and molecular pathogenesis of hydrocephalus?\n",
+      "Predicted Answer: 2\n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "  6%|▌         | 3/50 [00:45<13:35, 17.35s/it]"
+      " 60%|██████    | 12/20 [04:04<02:44, 20.51s/it]"
      ]
     },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "actual_answer 2\n",
-      "predicted_answer 2\n"
+      "Question: What is the molecular type of Ciprofloxacin?\n",
+      "Predicted Answer: 3\n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "  8%|▊         | 4/50 [01:27<20:48, 27.15s/it]"
+      " 65%|██████▌   | 13/20 [04:25<02:26, 20.92s/it]"
      ]
     },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "actual_answer 3\n",
-      "predicted_answer 2\n"
+      "Question: What was the outcome of the real-world case study mentioned in the research paper?\n",
+      "Predicted Answer: 1\n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      " 10%|█         | 5/50 [01:49<19:00, 25.35s/it]"
+      " 70%|███████   | 14/20 [04:47<02:07, 21.25s/it]"
      ]
     },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "actual_answer 1\n",
-      "predicted_answer 2\n"
+      "Question: How many unique variants and unique junctions were involved in the identified splice-associated variant events?\n",
+      "Predicted Answer: 2\n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      " 12%|█▏        | 6/50 [02:31<22:44, 31.01s/it]"
+      " 75%|███████▌  | 15/20 [05:09<01:47, 21.42s/it]"
      ]
     },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "actual_answer 3\n",
-      "predicted_answer 2\n"
+      "Question: What type of health outcomes were measured in relation to medication adherence among the persons with MS in this study?\n",
+      "Predicted Answer: 1\n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      " 14%|█▍        | 7/50 [03:14<24:55, 34.79s/it]"
+      " 80%|████████  | 16/20 [05:31<01:26, 21.53s/it]"
      ]
     },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "actual_answer 2\n",
-      "predicted_answer 2\n"
+      "Question: What is the 'alogp' value for Metformin?\n",
+      "Predicted Answer: 3\n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      " 16%|█▌        | 8/50 [03:36<21:31, 30.75s/it]"
+      " 85%|████████▌ | 17/20 [05:54<01:05, 21.82s/it]"
      ]
     },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "actual_answer 3\n",
-      "predicted_answer 1\n"
+      "Question: How many aromatic rings are present in the structure of Paracetamol (Acetaminophen)?\n",
+      "Predicted Answer: 3\n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      " 18%|█▊        | 9/50 [04:24<24:42, 36.16s/it]"
+      " 90%|█████████ | 18/20 [05:55<00:31, 15.83s/it]"
      ]
     },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "actual_answer 1\n",
-      "predicted_answer 2\n"
+      "Question: How do the polysiloxanes groups contribute to the response sensitivity of the probes in the polymeric microenvironment?\n",
+      "Predicted Answer: 2\n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      " 20%|██        | 10/50 [05:06<25:23, 38.09s/it]"
+      " 95%|█████████▌| 19/20 [06:18<00:17, 17.84s/it]"
      ]
     },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "actual_answer 0\n",
-      "predicted_answer 0\n"
+      "Question: What additional information beyond concentration measurements can DigitISA provide?\n",
+      "Predicted Answer: 2\n"
      ]
     },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      " 22%|██▏       | 11/50 [05:28<19:24, 29.85s/it]"
+      "100%|██████████| 20/20 [06:40<00:00, 20.02s/it]"
      ]
     },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "actual_answer 0\n",
-      "predicted_answer 0\n",
-      "Bootstrapped 4 full traces after 12 examples in round 0.\n"
+      "Question: How do mineral composition, surface topography, and surface charge influence DNA adsorption behavior and preservation on mineral substrates?\n",
+      "Predicted Answer: 2\n"
      ]
     },
     {
@@ -504,39 +1298,1075 @@
     }
    ],
    "source": [
+    "from tqdm import tqdm \n",
     "from dspy.teleprompt import BootstrapFewShot\n",
+    "dspy.settings.configure(lm= turbo)\n",
+    "\n",
     "teleprompter = BootstrapFewShot(metric=metric)\n",
     "# Compile!\n",
-    "compiled_rag = teleprompter.compile(Router_module(), trainset=total_data[:DEV_NUM])"
+    "compiled_rag = teleprompter.compile(Router_module(), trainset=total_data[:DEV_NUM])\n",
+    "\n",
+    "for x in tqdm(total_data[DEV_NUM: DEV_NUM + 20]):\n",
+    "    pred = compiled_rag.generate_answer(question = x.question)\n",
+    "    print(f\"Question: {x.question}\")\n",
+    "    print(f\"Predicted Answer: {pred.answer}\")\n",
+    "    new_row = pd.DataFrame({\n",
+    "            'llm': ['gpt3'], \n",
+    "            'question': [x.question], \n",
+    "            'answer': [x.answer], \n",
+    "            'prediction': [pred.answer], \n",
+    "            'prompt': [turbo.history[-1]['prompt']]\n",
+    "        })\n",
+    "    log_df = pd.concat([log_df, new_row], ignore_index = True)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "### openai was right 75% of times."
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 28,
+   "execution_count": 155,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "generate_answer = ChainOfThought(Signature(question -> answer\n",
-       "    instructions='Given the fields `question`, produce the fields `answer`.'\n",
-       "    question = Field(annotation=str required=True json_schema_extra={'desc': 'Question to be routed to route', '__dspy_field_type': 'input', 'prefix': 'Question:'})\n",
-       "    answer = Field(annotation=str required=True json_schema_extra={'desc': 'route option should be integer only no additional text', '__dspy_field_type': 'output', 'prefix': 'Answer:'})\n",
-       "))"
+       "0.75"
       ]
      },
-     "execution_count": 28,
+     "execution_count": 155,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
-    "compiled_rag"
+    "sum(log_df[log_df['llm'] == 'gpt3']['answer'] == log_df[log_df['llm'] == 'gpt3']['prediction'])/20 "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 156,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "log_df['is_pred_right'] = (log_df['answer'] == log_df['prediction'])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 157,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>llm</th>\n",
+       "      <th>question</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>prediction</th>\n",
+       "      <th>prompt</th>\n",
+       "      <th>is_pred_right</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What patient group was included in the study?</td>\n",
+       "      <td>1</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>False</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>How many aromatic rings are present in the str...</td>\n",
+       "      <td>3</td>\n",
+       "      <td>3</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What is the type of molecule is Lisinopril?</td>\n",
+       "      <td>3</td>\n",
+       "      <td>3</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What type of cardiovascular disease was the st...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>2</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>False</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What is the purpose of the study Recreational ...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>False</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>5</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What was the outcome of ZMIZ1 knockdown on est...</td>\n",
+       "      <td>2</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>False</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>6</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What was the primary symptom presented by the ...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>7</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What motor control theories propose about the ...</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>8</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What were the most common HPV types found amon...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>9</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What programming languages can be used by skil...</td>\n",
+       "      <td>2</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>False</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>10</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>Why is there an urgent need to understand the ...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>11</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What is the molecular type of Ciprofloxacin?</td>\n",
+       "      <td>3</td>\n",
+       "      <td>3</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>12</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What was the outcome of the real-world case st...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>How many unique variants and unique junctions ...</td>\n",
+       "      <td>2</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>False</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>14</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What type of health outcomes were measured in ...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>15</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What is the 'alogp' value for Metformin?</td>\n",
+       "      <td>3</td>\n",
+       "      <td>3</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>16</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>How many aromatic rings are present in the str...</td>\n",
+       "      <td>3</td>\n",
+       "      <td>3</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>17</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>How do the polysiloxanes groups contribute to ...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>2</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>False</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>18</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>What additional information beyond concentrati...</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>19</th>\n",
+       "      <td>gemma</td>\n",
+       "      <td>How do mineral composition, surface topography...</td>\n",
+       "      <td>2</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>False</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>20</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What patient group was included in the study?</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>False</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>21</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>How many aromatic rings are present in the str...</td>\n",
+       "      <td>3</td>\n",
+       "      <td>3</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>22</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What is the type of molecule is Lisinopril?</td>\n",
+       "      <td>3</td>\n",
+       "      <td>3</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>23</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What type of cardiovascular disease was the st...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>24</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What is the purpose of the study Recreational ...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>False</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>25</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What was the outcome of ZMIZ1 knockdown on est...</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What was the primary symptom presented by the ...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>0</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>False</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>27</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What motor control theories propose about the ...</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>28</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What were the most common HPV types found amon...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>29</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What programming languages can be used by skil...</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>30</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>Why is there an urgent need to understand the ...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>2</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>False</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>31</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What is the molecular type of Ciprofloxacin?</td>\n",
+       "      <td>3</td>\n",
+       "      <td>3</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>32</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What was the outcome of the real-world case st...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>33</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>How many unique variants and unique junctions ...</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>34</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What type of health outcomes were measured in ...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>1</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>35</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What is the 'alogp' value for Metformin?</td>\n",
+       "      <td>3</td>\n",
+       "      <td>3</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>36</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>How many aromatic rings are present in the str...</td>\n",
+       "      <td>3</td>\n",
+       "      <td>3</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>37</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>How do the polysiloxanes groups contribute to ...</td>\n",
+       "      <td>1</td>\n",
+       "      <td>2</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>False</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>38</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>What additional information beyond concentrati...</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>39</th>\n",
+       "      <td>gpt3</td>\n",
+       "      <td>How do mineral composition, surface topography...</td>\n",
+       "      <td>2</td>\n",
+       "      <td>2</td>\n",
+       "      <td>Study the `question` thoroughly to understand ...</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "      llm                                           question answer  \\\n",
+       "0   gemma      What patient group was included in the study?      1   \n",
+       "1   gemma  How many aromatic rings are present in the str...      3   \n",
+       "2   gemma        What is the type of molecule is Lisinopril?      3   \n",
+       "3   gemma  What type of cardiovascular disease was the st...      1   \n",
+       "4   gemma  What is the purpose of the study Recreational ...      0   \n",
+       "5   gemma  What was the outcome of ZMIZ1 knockdown on est...      2   \n",
+       "6   gemma  What was the primary symptom presented by the ...      1   \n",
+       "7   gemma  What motor control theories propose about the ...      2   \n",
+       "8   gemma  What were the most common HPV types found amon...      1   \n",
+       "9   gemma  What programming languages can be used by skil...      2   \n",
+       "10  gemma  Why is there an urgent need to understand the ...      1   \n",
+       "11  gemma       What is the molecular type of Ciprofloxacin?      3   \n",
+       "12  gemma  What was the outcome of the real-world case st...      1   \n",
+       "13  gemma  How many unique variants and unique junctions ...      2   \n",
+       "14  gemma  What type of health outcomes were measured in ...      1   \n",
+       "15  gemma           What is the 'alogp' value for Metformin?      3   \n",
+       "16  gemma  How many aromatic rings are present in the str...      3   \n",
+       "17  gemma  How do the polysiloxanes groups contribute to ...      1   \n",
+       "18  gemma  What additional information beyond concentrati...      2   \n",
+       "19  gemma  How do mineral composition, surface topography...      2   \n",
+       "20   gpt3      What patient group was included in the study?      1   \n",
+       "21   gpt3  How many aromatic rings are present in the str...      3   \n",
+       "22   gpt3        What is the type of molecule is Lisinopril?      3   \n",
+       "23   gpt3  What type of cardiovascular disease was the st...      1   \n",
+       "24   gpt3  What is the purpose of the study Recreational ...      0   \n",
+       "25   gpt3  What was the outcome of ZMIZ1 knockdown on est...      2   \n",
+       "26   gpt3  What was the primary symptom presented by the ...      1   \n",
+       "27   gpt3  What motor control theories propose about the ...      2   \n",
+       "28   gpt3  What were the most common HPV types found amon...      1   \n",
+       "29   gpt3  What programming languages can be used by skil...      2   \n",
+       "30   gpt3  Why is there an urgent need to understand the ...      1   \n",
+       "31   gpt3       What is the molecular type of Ciprofloxacin?      3   \n",
+       "32   gpt3  What was the outcome of the real-world case st...      1   \n",
+       "33   gpt3  How many unique variants and unique junctions ...      2   \n",
+       "34   gpt3  What type of health outcomes were measured in ...      1   \n",
+       "35   gpt3           What is the 'alogp' value for Metformin?      3   \n",
+       "36   gpt3  How many aromatic rings are present in the str...      3   \n",
+       "37   gpt3  How do the polysiloxanes groups contribute to ...      1   \n",
+       "38   gpt3  What additional information beyond concentrati...      2   \n",
+       "39   gpt3  How do mineral composition, surface topography...      2   \n",
+       "\n",
+       "   prediction                                             prompt  \\\n",
+       "0         NaN  Study the `question` thoroughly to understand ...   \n",
+       "1           3  Study the `question` thoroughly to understand ...   \n",
+       "2           3  Study the `question` thoroughly to understand ...   \n",
+       "3           2  Study the `question` thoroughly to understand ...   \n",
+       "4           1  Study the `question` thoroughly to understand ...   \n",
+       "5           1  Study the `question` thoroughly to understand ...   \n",
+       "6           1  Study the `question` thoroughly to understand ...   \n",
+       "7           2  Study the `question` thoroughly to understand ...   \n",
+       "8           1  Study the `question` thoroughly to understand ...   \n",
+       "9           1  Study the `question` thoroughly to understand ...   \n",
+       "10          1  Study the `question` thoroughly to understand ...   \n",
+       "11          3  Study the `question` thoroughly to understand ...   \n",
+       "12          1  Study the `question` thoroughly to understand ...   \n",
+       "13          1  Study the `question` thoroughly to understand ...   \n",
+       "14          1  Study the `question` thoroughly to understand ...   \n",
+       "15          3  Study the `question` thoroughly to understand ...   \n",
+       "16          3  Study the `question` thoroughly to understand ...   \n",
+       "17          2  Study the `question` thoroughly to understand ...   \n",
+       "18          2  Study the `question` thoroughly to understand ...   \n",
+       "19          1  Study the `question` thoroughly to understand ...   \n",
+       "20          0  Study the `question` thoroughly to understand ...   \n",
+       "21          3  Study the `question` thoroughly to understand ...   \n",
+       "22          3  Study the `question` thoroughly to understand ...   \n",
+       "23          1  Study the `question` thoroughly to understand ...   \n",
+       "24          1  Study the `question` thoroughly to understand ...   \n",
+       "25          2  Study the `question` thoroughly to understand ...   \n",
+       "26          0  Study the `question` thoroughly to understand ...   \n",
+       "27          2  Study the `question` thoroughly to understand ...   \n",
+       "28          1  Study the `question` thoroughly to understand ...   \n",
+       "29          2  Study the `question` thoroughly to understand ...   \n",
+       "30          2  Study the `question` thoroughly to understand ...   \n",
+       "31          3  Study the `question` thoroughly to understand ...   \n",
+       "32          1  Study the `question` thoroughly to understand ...   \n",
+       "33          2  Study the `question` thoroughly to understand ...   \n",
+       "34          1  Study the `question` thoroughly to understand ...   \n",
+       "35          3  Study the `question` thoroughly to understand ...   \n",
+       "36          3  Study the `question` thoroughly to understand ...   \n",
+       "37          2  Study the `question` thoroughly to understand ...   \n",
+       "38          2  Study the `question` thoroughly to understand ...   \n",
+       "39          2  Study the `question` thoroughly to understand ...   \n",
+       "\n",
+       "    is_pred_right  \n",
+       "0           False  \n",
+       "1            True  \n",
+       "2            True  \n",
+       "3           False  \n",
+       "4           False  \n",
+       "5           False  \n",
+       "6            True  \n",
+       "7            True  \n",
+       "8            True  \n",
+       "9           False  \n",
+       "10           True  \n",
+       "11           True  \n",
+       "12           True  \n",
+       "13          False  \n",
+       "14           True  \n",
+       "15           True  \n",
+       "16           True  \n",
+       "17          False  \n",
+       "18           True  \n",
+       "19          False  \n",
+       "20          False  \n",
+       "21           True  \n",
+       "22           True  \n",
+       "23           True  \n",
+       "24          False  \n",
+       "25           True  \n",
+       "26          False  \n",
+       "27           True  \n",
+       "28           True  \n",
+       "29           True  \n",
+       "30          False  \n",
+       "31           True  \n",
+       "32           True  \n",
+       "33           True  \n",
+       "34           True  \n",
+       "35           True  \n",
+       "36           True  \n",
+       "37          False  \n",
+       "38           True  \n",
+       "39           True  "
+      ]
+     },
+     "execution_count": 157,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "log_df"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "run.finish()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "run = wandb.init(project = \"pe_router\", name= \"pe_router_refined\", entity = os.environ['WANDB_ENTITY'])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 94,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "wandb.log({'router_output': log_df})"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 103,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "log_df.to_csv('pe_log_data.csv', index =False)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 111,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Using version \u001b[39;1m^5.20.0\u001b[39;22m for \u001b[36mplotly\u001b[39m\n",
+      "\n",
+      "\u001b[34mUpdating dependencies\u001b[39m\n",
+      "\u001b[2K\u001b[34mResolving dependencies...\u001b[39m \u001b[39;2m(0.9s)\u001b[39;22m\n",
+      "\n",
+      "\u001b[39;1mPackage operations\u001b[39;22m: \u001b[34m2\u001b[39m installs, \u001b[34m0\u001b[39m updates, \u001b[34m0\u001b[39m removals\n",
+      "\n",
+      "  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mdspy\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m2.0.8 7abf293\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mPending...\u001b[39m\n",
+      "  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mPending...\u001b[39m\n",
+      "\u001b[2A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mPending...\u001b[39m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mdspy\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m2.0.8 7abf293\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mInstalling...\u001b[39m\n",
+      "  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mPending...\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/evaluation/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/evaluation/utils.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/anthropic.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/aws_lm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/azure_openai.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/azurecognitivesearch.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/bedrock.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/cache_utils.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/clarifai.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/cohere.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/colbertv2.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/databricks.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/google.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/gpt3.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/groq_client.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/hf.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/hf_client.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/hf_server.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/lm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/ollama.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/pyserini.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/sbert.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/sentence_vectorizer.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/finetuning/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/finetuning/finetune_hf.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/compiler.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/demonstrate.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/inspect.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/predict.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/primitives.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/search.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/templates/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/templates/template_v2.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/templates/template_v3.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/templates/utils.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/ann_utils.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/dpr.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/metrics.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/settings.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/settings_v2.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/utils.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/adapters/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/adapters/basic_adapter.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/adapters/chatml_adapter.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/adapters/llamachat_adapter.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/adapters/vicuna_adapter.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/datasets/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/datasets/colors.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/datasets/dataloader.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/datasets/dataset.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/datasets/gsm8k.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/datasets/hotpotqa.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/evaluate/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/evaluate/auto_evaluation.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/evaluate/evaluate.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/evaluate/metrics.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/experimental/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/experimental/synthesizer.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/experimental/synthetic_data.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/functional/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/functional/functional.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/aggregation.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/chain_of_thought.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/chain_of_thought_with_hint.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/knn.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/langchain.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/multi_chain_comparison.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/parameter.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/predict.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/program_of_thought.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/react.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/retry.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/assertions.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/box.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/example.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/module.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/prediction.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/program.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/python_interpreter.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/chromadb_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/clarifai_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/databricks_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/deeplake_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/faiss_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/marqo_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/mongodb_atlas_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/neo4j_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/pgvector_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/pinecone_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/qdrant_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/retrieve.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/vectara_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/weaviate_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/weaviate_rm_test.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/you_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/signatures/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/signatures/field.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/signatures/signature.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/bootstrap.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/copro_optimizer.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/ensemble.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/finetune.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/knn_fewshot.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/mipro_optimizer.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/random_search.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/signature_opt.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/signature_opt_bayesian.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/signature_opt_typed.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/teleprompt.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/teleprompt_optuna.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/vanilla.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/utils/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/utils/dummies.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy_ai-2.4.1.dist-info/LICENSE over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy_ai-2.4.1.dist-info/METADATA over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy_ai-2.4.1.dist-info/WHEEL over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy_ai-2.4.1.dist-info/top_level.txt over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy_ai-2.4.1.dist-info/INSTALLER over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy_ai-2.4.1.dist-info/RECORD over existing file\u001b[39m\n",
+      "\u001b[2A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mPending...\u001b[39m\n",
+      "\u001b[1A\u001b[0J  \u001b[32;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mdspy\u001b[39m\u001b[39m (\u001b[39m\u001b[32m2.0.8 7abf293\u001b[39m\u001b[39m)\u001b[39m\n",
+      "  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mPending...\u001b[39m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mDownloading...\u001b[39m \u001b[39;1m0%\u001b[39;22m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mDownloading...\u001b[39m \u001b[39;1m10%\u001b[39;22m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mDownloading...\u001b[39m \u001b[39;1m20%\u001b[39;22m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mDownloading...\u001b[39m \u001b[39;1m30%\u001b[39;22m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mDownloading...\u001b[39m \u001b[39;1m40%\u001b[39;22m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mDownloading...\u001b[39m \u001b[39;1m50%\u001b[39;22m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mDownloading...\u001b[39m \u001b[39;1m60%\u001b[39;22m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mDownloading...\u001b[39m \u001b[39;1m70%\u001b[39;22m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mDownloading...\u001b[39m \u001b[39;1m80%\u001b[39;22m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mDownloading...\u001b[39m \u001b[39;1m90%\u001b[39;22m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mDownloading...\u001b[39m \u001b[39;1m100%\u001b[39;22m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m5.20.0\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mInstalling...\u001b[39m\n",
+      "\u001b[1A\u001b[0J  \u001b[32;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mplotly\u001b[39m\u001b[39m (\u001b[39m\u001b[32m5.20.0\u001b[39m\u001b[39m)\u001b[39m\n",
+      "\n",
+      "\u001b[34mWriting lock file\u001b[39m\n",
+      "\u001b[34mInstalling dependencies from lock file\u001b[39m\n",
+      "\n",
+      "\u001b[39;1mPackage operations\u001b[39;22m: \u001b[34m1\u001b[39m install, \u001b[34m0\u001b[39m updates, \u001b[34m0\u001b[39m removals\n",
+      "\n",
+      "  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mdspy\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m2.0.8 7abf293\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mPending...\u001b[39m\n",
+      "\u001b[1A\u001b[0J  \u001b[34;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mdspy\u001b[39m\u001b[39m (\u001b[39m\u001b[39;1m2.0.8 7abf293\u001b[39;22m\u001b[39m)\u001b[39m: \u001b[34mInstalling...\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/evaluation/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/evaluation/utils.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/anthropic.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/aws_lm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/azure_openai.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/azurecognitivesearch.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/bedrock.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/cache_utils.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/clarifai.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/cohere.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/colbertv2.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/databricks.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/google.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/gpt3.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/groq_client.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/hf.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/hf_client.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/hf_server.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/lm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/ollama.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/pyserini.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/sbert.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/sentence_vectorizer.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/finetuning/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/modules/finetuning/finetune_hf.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/compiler.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/demonstrate.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/inspect.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/predict.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/primitives.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/primitives/search.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/templates/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/templates/template_v2.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/templates/template_v3.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/templates/utils.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/ann_utils.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/dpr.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/metrics.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/settings.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/settings_v2.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dsp/utils/utils.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/adapters/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/adapters/basic_adapter.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/adapters/chatml_adapter.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/adapters/llamachat_adapter.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/adapters/vicuna_adapter.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/datasets/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/datasets/colors.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/datasets/dataloader.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/datasets/dataset.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/datasets/gsm8k.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/datasets/hotpotqa.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/evaluate/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/evaluate/auto_evaluation.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/evaluate/evaluate.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/evaluate/metrics.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/experimental/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/experimental/synthesizer.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/experimental/synthetic_data.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/functional/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/functional/functional.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/aggregation.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/chain_of_thought.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/chain_of_thought_with_hint.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/knn.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/langchain.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/multi_chain_comparison.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/parameter.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/predict.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/program_of_thought.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/react.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/predict/retry.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/assertions.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/box.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/example.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/module.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/prediction.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/program.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/primitives/python_interpreter.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/chromadb_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/clarifai_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/databricks_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/deeplake_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/faiss_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/marqo_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/mongodb_atlas_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/neo4j_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/pgvector_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/pinecone_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/qdrant_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/retrieve.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/vectara_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/weaviate_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/weaviate_rm_test.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/retrieve/you_rm.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/signatures/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/signatures/field.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/signatures/signature.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/bootstrap.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/copro_optimizer.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/ensemble.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/finetune.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/knn_fewshot.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/mipro_optimizer.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/random_search.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/signature_opt.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/signature_opt_bayesian.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/signature_opt_typed.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/teleprompt.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/teleprompt_optuna.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/teleprompt/vanilla.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/utils/__init__.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy/utils/dummies.py over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy_ai-2.4.1.dist-info/LICENSE over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy_ai-2.4.1.dist-info/METADATA over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy_ai-2.4.1.dist-info/WHEEL over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy_ai-2.4.1.dist-info/top_level.txt over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy_ai-2.4.1.dist-info/INSTALLER over existing file\u001b[39m\n",
+      "\u001b[33mInstalling /Users/som/Downloads/code/search/.venv/lib/python3.11/site-packages/dspy_ai-2.4.1.dist-info/RECORD over existing file\u001b[39m\n",
+      "\u001b[1A\u001b[0J  \u001b[32;1m-\u001b[39;22m \u001b[39mInstalling \u001b[39m\u001b[36mdspy\u001b[39m\u001b[39m (\u001b[39m\u001b[32m2.0.8 7abf293\u001b[39m\u001b[39m)\u001b[39m\n",
+      "\n",
+      "\u001b[39;1mInstalling\u001b[39;22m the current project: \u001b[36mapp\u001b[39m (\u001b[39;1m0.1.0\u001b[39;22m)\u001b[1G\u001b[2K\u001b[39;1mInstalling\u001b[39;22m the current project: \u001b[36mapp\u001b[39m (\u001b[32m0.1.0\u001b[39m)\n"
+     ]
+    }
+   ],
+   "source": [
+    "!poetry add plotly \n",
+    "!poetry install "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 124,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 640x480 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "prediction_counts = log_df.groupby(['llm', 'is_pred_right']).size().unstack(fill_value=0)\n",
+    "\n",
+    "\n",
+    "fig, ax = plt.subplots()\n",
+    "\n",
+    "# Plotting the data\n",
+    "prediction_counts.plot(kind='bar', stacked=False, ax=ax)\n",
+    "\n",
+    "# Setting labels and title\n",
+    "ax.set_xlabel('Model')\n",
+    "ax.set_ylabel('Number of Predictions')\n",
+    "ax.set_title('Right vs Wrong Predictions for GPT-3 and Gemma')\n",
+    "ax.legend(['Wrong', 'Right'])\n",
+    "\n",
+    "plt.xticks(rotation=0)\n",
+    "plt.show()\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 125,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "wandb.log({'predictions_comparision':wandb.Image(fig)})"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 137,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 1500x500 with 2 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "# Assuming the 't2i' dictionary maps the class names to their respective numeric representations\n",
+    "t_2_i = {\n",
+    "    \"Clinical Trials\": '0',\n",
+    "    \"pubmed\": '1',\n",
+    "    \"bioarxiv\": '2',\n",
+    "    \"chembl\": '3',\n",
+    "}\n",
+    "\n",
+    "# Reverse the mapping for easier lookup: from numeric representation to class name\n",
+    "i_2_t = {v: k for k, v in t_2_i.items()}\n",
+    "\n",
+    "# Replace numeric labels in the DataFrame with their corresponding class names\n",
+    "log_df['answer'] = log_df['answer'].astype(str).map(i_2_t)\n",
+    "log_df['prediction'] = log_df['prediction'].astype(str).map(i_2_t)\n",
+    "\n",
+    "# Group by model and actual class, and count the occurrences of each predicted class\n",
+    "confusion_data = log_df.groupby(['llm', 'answer', 'prediction']).size().unstack(fill_value=0)\n",
+    "\n",
+    "# Plotting the confusion data as a bar graph\n",
+    "fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(15, 5), sharey=True)\n",
+    "\n",
+    "for i, (model, data) in enumerate(confusion_data.groupby(level=0)):\n",
+    "    data.plot(kind='bar', ax=axes[i], stacked=True)\n",
+    "    axes[i].set_title(model)\n",
+    "    axes[i].set_xlabel('Actual Class')\n",
+    "    axes[i].set_ylabel('Count')\n",
+    "    axes[i].legend(title='Predicted Class', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
+    "\n",
+    "fig.suptitle('Confusion predictions Across Gemma and GPT-3')\n",
+    "plt.tight_layout()\n",
+    "plt.show()\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 139,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "wandb.log({'confusing_class':wandb.Image(fig)})"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "## EXPERIMENTATION"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 30,
+   "execution_count": 53,
    "metadata": {},
    "outputs": [
     {
@@ -555,93 +2385,95 @@
       "\n",
       "Question: Question to be routed to route\n",
       "Reasoning: Let's think step by step in order to ${produce the answer}. We ...\n",
-      "Answer: route option should be integer only no additional text\n",
+      "The route number to the question is: route option should be integer without any additional explaination\n",
       "\n",
       "---\n",
       "\n",
-      "Question: What is the purpose of the study Ilomedin Treatment for Patients Having Undergone Primary Percutaneous Coronary Intervention (PCI) ?\n",
-      "Answer: 0\n",
+      "Question: Were there notable differences in the clinicopathological features of breast cancer based on the age of patients?\n",
+      "Reasoning: Let's think step by step in order to answer this question. First, we need to understand the research paper's focus. After reviewing the title and question, it seems to be asking about potential differences in breast cancer based on the age of patients. To answer, we would need to look for relevant statistical analysis comparing clinicopathological features of breast cancer in different age groups.\n",
+      "The route number to the question is: 1\n",
       "\n",
       "---\n",
       "\n",
-      "Question: What is the need for constructing a novel TMSD based electrochemical detection strategy according to the research paper?\n",
-      "Answer: 1\n",
+      "Question: What treatment was given to the participants in Exposure, Dose, Body Burden and Health Effects of Lead\n",
+      "Reasoning: Let's think step by step in order to answer the question. The study Exposure, Dose, Body Burden and Health Effects of Lead is about the health effects of lead, so the participants were likely exposed to lead in some way. However, the specific treatment is not provided in the question.\n",
+      "The route number to the question is: 0.\n",
       "\n",
       "---\n",
       "\n",
-      "Question: How do mineral composition, surface topography, and surface charge influence DNA adsorption behavior and preservation on mineral substrates?\n",
-      "Answer: 2\n",
+      "Question: How many tumor samples were analyzed using RegTools in the research study?\n",
+      "The route number to the question is: 2\n",
       "\n",
       "---\n",
       "\n",
-      "Question: Who is not recommending this work to be cited as a reference for projects?\n",
-      "Answer: 2\n",
+      "Question: What is the type of following study: Exposure, Dose, Body Burden and Health Effects of Lead\n",
+      "The route number to the question is: 0\n",
       "\n",
       "---\n",
       "\n",
-      "Question: Where did the study Safety and Tolerability of RNS60 Given by IV to Healthy Subjects take place\n",
-      "Answer: 0\n",
+      "Question: What clinical implication does the identification of these biomarkers hold for T2DM patients in terms of managing their coronary artery disease risk?\n",
+      "The route number to the question is: 1\n",
       "\n",
       "---\n",
       "\n",
-      "Question: In what ways does DigitISA offer an improvement over conventional immuno-sensing techniques?\n",
-      "Answer: 2\n",
+      "Question: Does Amoxicillin have any aromatic rings?\n",
+      "The route number to the question is: 3\n",
       "\n",
       "---\n",
       "\n",
-      "Question: How do the results of utilizing GPLA jointly with biophysical modeling contribute to understanding the spatio-temporal dynamics observed in Utah array recordings?\n",
-      "Answer: 2\n",
+      "Question: Where did the study The Combined Effect of 2,3-Dimercaptosuccinic Acid and Multi-Nutrients on Children in Lead Poisoning take place\n",
+      "The route number to the question is: 0\n",
       "\n",
       "---\n",
       "\n",
-      "Question: What does the second wave of muscle activity, time-locked to voluntary reach onset, indicate?\n",
-      "Answer: 2\n",
+      "Question: How many families were reported to have the SNCA p.V15A variant according to the research paper?\n",
+      "The route number to the question is: 1\n",
       "\n",
       "---\n",
       "\n",
-      "Question: What additional information beyond concentration measurements can DigitISA provide?\n",
-      "Answer: 2\n",
+      "Question: What brain region was affected by the hemorrhage in the case presented?\n",
+      "The route number to the question is: 1\n",
       "\n",
       "---\n",
       "\n",
-      "Question: Where did the study ROsuvastatin Pretreatment to Reduce MyocArdial Periprocedural Necrosis:Comparison With Atorvastatin Reloading (ROMAIIReload) take place\n",
-      "Answer: 0\n",
+      "Question: What is the therapeutic flag for Aspirin?\n",
+      "The route number to the question is: 3\n",
       "\n",
       "---\n",
       "\n",
-      "Question: What type of health outcomes were measured in relation to medication adherence among the persons with MS in this study?\n",
-      "Answer: 1\n",
+      "Question: How does recording limb muscle activity contribute to understanding the influence of the non-chosen target?\n",
+      "The route number to the question is: 2\n",
       "\n",
       "---\n",
       "\n",
-      "Question: What is the type of following study: Recipient Vessels for Free Tissue Flaps in Advanced Oncologic Defects of the Midface and Scalp\n",
-      "Answer: 0\n",
+      "Question: What is the chirality of Ibuprofen?\n",
+      "The route number to the question is: 3\n",
       "\n",
       "---\n",
       "\n",
-      "Question: What treatment was given to the participants in Recipient Vessels for Free Tissue Flaps in Advanced Oncologic Defects of the Midface and Scalp\n",
-      "Answer: 0\n",
+      "Question: How does the proposed z-drift detection and correction system compare to out-of-focus correction modules offered by microscope manufacturers for their flagship instruments?\n",
+      "The route number to the question is: 2\n",
       "\n",
       "---\n",
       "\n",
-      "Question: What was the mean MARS-5 score among persons with MS in the study?\n",
-      "Answer: 1\n",
+      "Question: What treatment was given to the participants in Recipient Vessels for Free Tissue Flaps in Advanced Oncologic Defects of the Midface and Scalp\n",
+      "The route number to the question is: 0\n",
       "\n",
       "---\n",
       "\n",
-      "Question: What are the surgical treatments mentioned for hydrocephalus in the research paper?\n",
-      "Answer: 1\n",
+      "Question: Was there an abstract provided in the research paper?\n",
+      "The route number to the question is: 1\n",
       "\n",
       "---\n",
       "\n",
-      "Question: What was the reason for withdrawing the manuscript?\n",
-      "Answer: 2\n",
+      "Question: How is the coexpression of SMYD4 and PRMT5 associated with the prognosis of HCC patients?\n",
+      "The route number to the question is: 1\n",
       "\n",
       "---\n",
       "\n",
-      "Question: Where did the study Homeopathic Preparation Plumbum Metallicum for Lead Poisoning take place\n",
-      "Reasoning: Let's think step by step in order to\u001b[32m produce the answer. We need to identify the location where the study was conducted.\n",
-      "Answer: 0\u001b[0m\n",
+      "Question: What is the molecular formula of Ciprofloxacin ?\n",
+      "Reasoning: Let's think step by step in order to\u001b[32m answer this question. The molecular formula for Ciprofloxacin is C17H18FN3O3.\n",
+      "The route number to the question is: 3.\u001b[0m\u001b[31m \t (and 116 other completions)\u001b[0m\n",
       "\n",
       "\n",
       "\n"
@@ -649,7 +2481,7 @@
     }
    ],
    "source": [
-    "turbo.inspect_history(n=1)"
+    "# mixtral.inspect_history(n=1)"
    ]
   },
   {
@@ -1046,6 +2878,7 @@
     }
    ],
    "source": [
+    "# PARTIALLY WORKING\n",
     "# BayesianSignature optimizer is not working \n",
     "# teleprompter_baysian = BayesianSignatureOptimizer(prompt_model=\"Route the respective question to the required service\", task_model=\"route integer option\", metric=metric, n=3)\n",
     "# kwargs = dict(num_threads=NUM_THREADS, display_progress=True, display_table=0)\n",
@@ -1070,15 +2903,16 @@
     }
    ],
    "source": [
-    "from dspy.teleprompt.signature_opt_typed import optimize_signature\n",
-    "from dspy.evaluate.metrics import answer_exact_match\n",
-    "from dspy.functional import TypedChainOfThought\n",
+    "##### NOT WORKING\n",
+    "# from dspy.teleprompt.signature_opt_typed import optimize_signature\n",
+    "# from dspy.evaluate.metrics import answer_exact_match\n",
+    "# from dspy.functional import TypedChainOfThought\n",
     "\n",
-    "compiled_program = optimize_signature(\n",
-    "    student=TypedChainOfThought(\"question -> answer\"),\n",
-    "    evaluator=Evaluate(devset=total_data[:DEV_NUM], metric=answer_exact_match, num_threads=10, display_progress=True),\n",
-    "    n_iterations=50,\n",
-    ").program"
+    "# compiled_program = optimize_signature(\n",
+    "#     student=TypedChainOfThought(\"question -> answer\"),\n",
+    "#     evaluator=Evaluate(devset=total_data[:DEV_NUM], metric=answer_exact_match, num_threads=10, display_progress=True),\n",
+    "#     n_iterations=50,\n",
+    "# ).program"
    ]
   },
   {
diff --git a/api/pyproject.toml b/api/pyproject.toml
index 02e8328..538e13e 100644
--- a/api/pyproject.toml
+++ b/api/pyproject.toml
@@ -20,6 +20,9 @@ authx = "1.0.1b1"
 itsdangerous = "^2.1.2"
 llama-index-embeddings-text-embeddings-inference = "^0.1.2"
 dspy = {git = "git@github.com:curieo-org/dspy.git"}
+matplotlib = "^3.8.3"
+plotly = "^5.20.0"
+nbformat = "^5.10.2"
 
 [tool.poetry.group.dev.dependencies]
 pytest = "^8.1.1"
